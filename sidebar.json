[{"text":"1. 学习资料","collapsed":true,"items":[{"text":"✅ TypeScript（阮一峰）","link":"/notes/0002. TypeScript（阮一峰）/README"},{"text":"✅ 术语表","link":"/notes/0054. 术语表/README"},{"text":"✅ roadmap","link":"/notes/0039. roadmap/README"},{"text":"⏰ TS 官方文档","link":"/notes/0073. TS 官方文档/README"},{"text":"⏰ TS Github 仓库","link":"/notes/0074. TS Github 仓库/README"},{"text":"⏰ DefinitelyTyped 项目","link":"/notes/0075. DefinitelyTyped 项目/README"}]},{"text":"2. TS 简介","collapsed":true,"items":[{"text":"✅ TS 简介","link":"/notes/0008. TS 简介/README"},{"text":"✅ TS 是什么","link":"/notes/0001. TS 是什么/README"},{"text":"✅ TS 的发展简史","link":"/notes/0003. TS 的发展简史/README"},{"text":"✅ TS 的博客","link":"/notes/0005. TS 的博客/README"},{"text":"✅ 类型 vs. 值","link":"/notes/0004. 类型 vs. 值/README"},{"text":"✅ 面向对象的思维方式","link":"/notes/0006. 面向对象的思维方式/README"},{"text":"✅ 动态类型 vs. 静态类型","link":"/notes/0007. 动态类型 vs. 静态类型/README"},{"text":"⏰ TS 的优势与劣势","link":"/notes/0076. TS 的优势与劣势/README"},{"text":"⏰ TS 的应用场景","link":"/notes/0077. TS 的应用场景/README"}]},{"text":"3. 基本用法","collapsed":true,"items":[{"text":"✅ 基本用法","link":"/notes/0044. 基本用法/README"},{"text":"✅ 类型声明和类型推断","link":"/notes/0009. 类型声明和类型推断/README"},{"text":"✅ TS 的编译","link":"/notes/0010. TS 的编译/README"},{"text":"✅ TS Playground","link":"/notes/0011. TS Playground/README"},{"text":"✅ tsc 快速入门","link":"/notes/0012. tsc 快速入门/README"},{"text":"⏰ tsconfig.json 快速入门","link":"/notes/0078. tsconfig.json 快速入门/README"},{"text":"✅ ts-node 快速入门","link":"/notes/0013. ts-node 快速入门/README"},{"text":"✅ nodemon 快速入门","link":"/notes/0041. nodemon 快速入门/README"},{"text":"✅ ts-node-dev 快速入门","link":"/notes/0042. ts-node-dev 快速入门/README"}]},{"text":"4. 顶层类型和底层类型","collapsed":true,"items":[{"text":"✅ 顶层类型和底层类型","link":"/notes/0046. 顶层类型和底层类型/README"},{"text":"✅ any 类型","link":"/notes/0014. any 类型/README"},{"text":"✅ unknown 类型","link":"/notes/0015. unknown 类型/README"},{"text":"✅ never 类型","link":"/notes/0016. never 类型/README"},{"text":"⏰ void 类型","link":"/notes/0079. void 类型/README"}]},{"text":"5. 类型系统基础知识","collapsed":true,"items":[{"text":"✅ boolean 类型","link":"/notes/0018. boolean 类型/README"},{"text":"✅ string 类型","link":"/notes/0019. string 类型/README"},{"text":"✅ number 类型","link":"/notes/0020. number 类型/README"},{"text":"✅ bigint 类型","link":"/notes/0021. bigint 类型/README"},{"text":"✅ symbol 类型","link":"/notes/0022. symbol 类型/README"},{"text":"✅ object 类型和 Object 类型","link":"/notes/0023. object 类型和 Object 类型/README"},{"text":"✅ undefined 类型和 null 类型","link":"/notes/0024. undefined 类型和 null 类型/README"},{"text":"✅ 包装对象类型","link":"/notes/0047. 包装对象类型/README"},{"text":"✅ 字面量类型","link":"/notes/0025. 字面量类型/README"},{"text":"✅ 联合类型","link":"/notes/0026. 联合类型/README"},{"text":"✅ 交叉类型","link":"/notes/0027. 交叉类型/README"},{"text":"✅ type 关键字","link":"/notes/0028. type 关键字/README"},{"text":"✅ typeof 运算符","link":"/notes/0029. typeof 运算符/README"},{"text":"✅ 类型作用域","link":"/notes/0030. 类型作用域/README"}]},{"text":"6. 类型兼容性","collapsed":true,"items":[{"text":"✅ 类型兼容性","link":"/notes/0031. 类型兼容性/README"},{"text":"✅ 结构子类型","link":"/notes/0067. 结构子类型/README"},{"text":"✅ 类型的父子关系","link":"/notes/0072. 类型的父子关系/README"},{"text":"✅ 对象类型的兼容性规则","link":"/notes/0068. 对象类型的兼容性规则/README"},{"text":"✅ 函数类型的兼容性规则","link":"/notes/0069. 函数类型的兼容性规则/README"},{"text":"✅ 类类型的兼容性规则","link":"/notes/0071. 类类型的兼容性规则/README"},{"text":"⏰ 泛型类型的兼容性规则","link":"/notes/0070. 泛型类型的兼容性规则/README"},{"text":"✅ 特殊类型之间的兼容性","link":"/notes/0017. 特殊类型之间的兼容性/README"},{"text":"⏰ 协变与逆变","link":"/notes/0080. 协变与逆变/README"},{"text":"⏰ 双向协变问题","link":"/notes/0081. 双向协变问题/README"}]},{"text":"7. 数组","collapsed":true,"items":[{"text":"✅ 数组类型","link":"/notes/0032. 数组类型/README"},{"text":"⏰ 数组的两种类型声明方式","link":"/notes/0082. 数组的两种类型声明方式/README"},{"text":"⏰ 只读数组 ReadonlyArray","link":"/notes/0083. 只读数组 ReadonlyArray/README"},{"text":"⏰ 数组的类型推断","link":"/notes/0084. 数组的类型推断/README"},{"text":"⏰ 多维数组","link":"/notes/0085. 多维数组/README"}]},{"text":"8. 元组","collapsed":true,"items":[{"text":"✅ 元组类型","link":"/notes/0036. 元组类型/README"},{"text":"⏰ 元组可选元素","link":"/notes/0086. 元组可选元素/README"},{"text":"⏰ 元组剩余元素","link":"/notes/0087. 元组剩余元素/README"},{"text":"⏰ 元组只读元素","link":"/notes/0088. 元组只读元素/README"},{"text":"⏰ 具名元组","link":"/notes/0089. 具名元组/README"},{"text":"⏰ 元组 vs. 数组","link":"/notes/0090. 元组 vs. 数组/README"}]},{"text":"9. 函数","collapsed":true,"items":[{"text":"✅ 函数类型","link":"/notes/0034. 函数类型/README"},{"text":"⏰ 函数表达式类型","link":"/notes/0091. 函数表达式类型/README"},{"text":"⏰ 可选参数与默认参数","link":"/notes/0092. 可选参数与默认参数/README"},{"text":"⏰ 剩余参数","link":"/notes/0093. 剩余参数/README"},{"text":"⏰ 函数重载","link":"/notes/0094. 函数重载/README"},{"text":"⏰ 构造函数类型","link":"/notes/0095. 构造函数类型/README"},{"text":"⏰ 函数的 void 返回类型的特殊性","link":"/notes/0096. 函数的 void 返回类型的特殊性/README"},{"text":"⏰ 函数的 this 参数","link":"/notes/0097. 函数的 this 参数/README"},{"text":"⏰ 函数类型表达式 vs. 调用签名","link":"/notes/0098. 函数类型表达式 vs. 调用签名/README"}]},{"text":"10. 对象","collapsed":true,"items":[{"text":"✅ 对象类型","link":"/notes/0033. 对象类型/README"},{"text":"⏰ 对象只读属性","link":"/notes/0099. 对象只读属性/README"},{"text":"⏰ 对象可选属性","link":"/notes/0100. 对象可选属性/README"},{"text":"⏰ 对象索引签名","link":"/notes/0101. 对象索引签名/README"},{"text":"⏰ 对象的额外属性检查","link":"/notes/0102. 对象的额外属性检查/README"},{"text":"⏰ 对象类型的扩展","link":"/notes/0103. 对象类型的扩展/README"},{"text":"⏰ 使用 Record 工具类型约束对象","link":"/notes/0104. 使用 Record 工具类型约束对象/README"}]},{"text":"11. 接口","collapsed":true,"items":[{"text":"✅ interface 关键字","link":"/notes/0052. interface 关键字/README"},{"text":"⏰ 接口的继承","link":"/notes/0105. 接口的继承/README"},{"text":"⏰ 接口的合并（声明合并）","link":"/notes/0106. 接口的合并（声明合并）/README"},{"text":"⏰ 接口的索引签名","link":"/notes/0107. 接口的索引签名/README"},{"text":"⏰ 接口的调用签名","link":"/notes/0108. 接口的调用签名/README"},{"text":"⏰ 接口的构造签名","link":"/notes/0109. 接口的构造签名/README"},{"text":"⏰ 混合类型接口","link":"/notes/0110. 混合类型接口/README"},{"text":"✅ type vs. interface","link":"/notes/0053. type vs. interface/README"}]},{"text":"12. 类","collapsed":true,"items":[{"text":"⏰ class 类型","link":"/notes/0035. class 类型/README"},{"text":"✅ 类属性严格初始化","link":"/notes/0066. 类属性严格初始化/README"},{"text":"✅ 类中的参数属性","link":"/notes/0056. 类中的参数属性/README"},{"text":"⏰ 抽象类","link":"/notes/0057. 抽象类/README"},{"text":"✅ 类中的存取器","link":"/notes/0058. 类中的存取器/README"},{"text":"✅ 类实现接口","link":"/notes/0059. 类实现接口/README"},{"text":"✅ 类中的只读属性","link":"/notes/0060. 类中的只读属性/README"},{"text":"✅ 类的静态成员","link":"/notes/0061. 类的静态成员/README"},{"text":"✅ 类的三个可访问性修饰符","link":"/notes/0062. 类的三个可访问性修饰符/README"},{"text":"✅ 类的继承","link":"/notes/0064. 类的继承/README"},{"text":"⏰ 子类重写父类同名成员","link":"/notes/0063. 子类重写父类同名成员/README"},{"text":"✅ 类中的 this 参数和 this 类型","link":"/notes/0055. 类中的 this 参数和 this 类型/README"},{"text":"✅ 类与函数的选择","link":"/notes/0065. 类与函数的选择/README"}]},{"text":"13. 泛型","collapsed":true,"items":[{"text":"⏰ 泛型","link":"/notes/0038. 泛型/README"}]},{"text":"14. Enum 类型","collapsed":true,"items":[{"text":"⏰ Enum 类型","link":"/notes/0037. Enum 类型/README"}]},{"text":"15. 类型断言","collapsed":true,"items":[{"text":"⏰ 类型断言","link":"/notes/0051. 类型断言/README"},{"text":"⏰ 类型断言的条件","link":"/notes/0040. 类型断言的条件/README"},{"text":"⏰ as const 断言","link":"/notes/0048. as const 断言/README"},{"text":"⏰ 非空断言","link":"/notes/0049. 非空断言/README"},{"text":"⏰ 断言函数","link":"/notes/0050. 断言函数/README"}]},{"text":"16. 模块","collapsed":true,"items":[]},{"text":"17. namespace","collapsed":true,"items":[]},{"text":"18. 装饰器","collapsed":true,"items":[]},{"text":"19. 装饰器（旧语法）","collapsed":true,"items":[]},{"text":"20. declare 关键字","collapsed":true,"items":[]},{"text":"21. d.ts 类型声明文件","collapsed":true,"items":[]},{"text":"22. 类型运算符","collapsed":true,"items":[]},{"text":"23. 类型映射","collapsed":true,"items":[]},{"text":"24. 类型工具","collapsed":true,"items":[]},{"text":"25. 注释指令","collapsed":true,"items":[]},{"text":"26. tsconfig.json 文件","collapsed":true,"items":[]},{"text":"27. tsc 命令","collapsed":true,"items":[]},{"text":"28. 实战技巧","collapsed":true,"items":[]},{"text":"29. 深入原理","collapsed":true,"items":[{"text":"⏰ 深入原理","link":"/notes/0045. 深入原理/README"},{"text":"✅ Source Map 的基本概念和原理","link":"/notes/0043. Source Map 的基本概念和原理/README"}]},{"text":"30. 进阶话题","collapsed":true,"items":[]},{"text":"31. 空","collapsed":true,"items":[{"text":"⏰ 类的类型","link":"/notes/0111. 类的类型/README"},{"text":"⏰ 类的结构类型","link":"/notes/0112. 类的结构类型/README"},{"text":"⏰ 类的 implements 子句","link":"/notes/0113. 类的 implements 子句/README"},{"text":"⏰ 类的静态块","link":"/notes/0114. 类的静态块/README"},{"text":"⏰ 泛型类","link":"/notes/0115. 泛型类/README"},{"text":"⏰ 泛型函数","link":"/notes/0116. 泛型函数/README"},{"text":"⏰ 泛型接口","link":"/notes/0117. 泛型接口/README"},{"text":"⏰ 泛型约束","link":"/notes/0118. 泛型约束/README"},{"text":"⏰ 在泛型约束中使用类型参数","link":"/notes/0119. 在泛型约束中使用类型参数/README"},{"text":"⏰ 在泛型中使用类类型","link":"/notes/0120. 在泛型中使用类类型/README"},{"text":"⏰ 泛型默认值","link":"/notes/0121. 泛型默认值/README"},{"text":"⏰ 泛型的最佳实践","link":"/notes/0122. 泛型的最佳实践/README"},{"text":"⏰ 数字枚举","link":"/notes/0123. 数字枚举/README"},{"text":"⏰ 字符串枚举","link":"/notes/0124. 字符串枚举/README"},{"text":"⏰ 异构枚举","link":"/notes/0125. 异构枚举/README"},{"text":"⏰ 常量枚举（const enum）","link":"/notes/0126. 常量枚举（const enum）/README"},{"text":"⏰ 外部枚举（ambient enum）","link":"/notes/0127. 外部枚举（ambient enum）/README"},{"text":"⏰ 枚举成员的类型","link":"/notes/0128. 枚举成员的类型/README"},{"text":"⏰ 反向映射","link":"/notes/0129. 反向映射/README"},{"text":"⏰ 枚举 vs. 对象字面量","link":"/notes/0130. 枚举 vs. 对象字面量/README"},{"text":"⏰ 双重断言","link":"/notes/0131. 双重断言/README"},{"text":"⏰ 类型断言的使用场景","link":"/notes/0132. 类型断言的使用场景/README"},{"text":"⏰ 类型断言 vs. 类型声明","link":"/notes/0133. 类型断言 vs. 类型声明/README"},{"text":"⏰ xxx","link":"/notes/0134. xxx/README"}]}]