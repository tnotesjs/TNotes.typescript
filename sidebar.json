[{"text":"1. 学习资料","collapsed":true,"items":[{"text":"✅ TypeScript（阮一峰）","link":"/notes/0002. TypeScript（阮一峰）/README"},{"text":"✅ 术语表","link":"/notes/0054. 术语表/README"},{"text":"✅ roadmap","link":"/notes/0039. roadmap/README"}]},{"text":"2. TS 简介","collapsed":true,"items":[{"text":"✅ TS 简介","link":"/notes/0008. TS 简介/README"},{"text":"✅ TypeScript 简介","link":"/notes/0001. TypeScript 简介/README"},{"text":"✅ TypeScript 发展简史","link":"/notes/0003. TypeScript 发展简史/README"},{"text":"✅ TypeScript 博客","link":"/notes/0005. TypeScript 博客/README"},{"text":"✅ 类型 vs. 值","link":"/notes/0004. 类型 vs. 值/README"},{"text":"✅ 面向对象的思维方式","link":"/notes/0006. 面向对象的思维方式/README"},{"text":"✅ 动态类型 vs. 静态类型","link":"/notes/0007. 动态类型 vs. 静态类型/README"}]},{"text":"3. 基本用法","collapsed":true,"items":[{"text":"✅ 基本用法","link":"/notes/0044. 基本用法/README"},{"text":"✅ 类型声明和类型推断","link":"/notes/0009. 类型声明和类型推断/README"},{"text":"✅ TS 的编译","link":"/notes/0010. TS 的编译/README"},{"text":"✅ TS Playground","link":"/notes/0011. TS Playground/README"},{"text":"✅ tsc 基本使用","link":"/notes/0012. tsc 基本使用/README"},{"text":"✅ ts-node 基本使用","link":"/notes/0013. ts-node 基本使用/README"},{"text":"✅ nodemon 基本使用","link":"/notes/0041. nodemon 基本使用/README"},{"text":"✅ ts-node-dev 基本使用","link":"/notes/0042. ts-node-dev 基本使用/README"}]},{"text":"4. 顶层类型和底层类型","collapsed":true,"items":[{"text":"✅ 顶层类型和底层类型","link":"/notes/0046. 顶层类型和底层类型/README"},{"text":"✅ any 类型","link":"/notes/0014. any 类型/README"},{"text":"✅ unknown 类型","link":"/notes/0015. unknown 类型/README"},{"text":"✅ never 类型","link":"/notes/0016. never 类型/README"},{"text":"✅ 特殊类型的可赋值性","link":"/notes/0017. 特殊类型的可赋值性/README"}]},{"text":"5. 类型系统","collapsed":true,"items":[{"text":"✅ boolean 类型","link":"/notes/0018. boolean 类型/README"},{"text":"✅ string 类型","link":"/notes/0019. string 类型/README"},{"text":"✅ number 类型","link":"/notes/0020. number 类型/README"},{"text":"✅ bigint 类型","link":"/notes/0021. bigint 类型/README"},{"text":"✅ symbol 类型","link":"/notes/0022. symbol 类型/README"},{"text":"✅ object 类型和 Object 类型","link":"/notes/0023. object 类型和 Object 类型/README"},{"text":"✅ undefined 类型和 null 类型","link":"/notes/0024. undefined 类型和 null 类型/README"},{"text":"✅ 包装对象类型","link":"/notes/0047. 包装对象类型/README"},{"text":"✅ 字面量类型","link":"/notes/0025. 字面量类型/README"},{"text":"✅ 联合类型","link":"/notes/0026. 联合类型/README"},{"text":"✅ 交叉类型","link":"/notes/0027. 交叉类型/README"},{"text":"✅ type 关键字","link":"/notes/0028. type 关键字/README"},{"text":"✅ typeof 运算符","link":"/notes/0029. typeof 运算符/README"},{"text":"✅ 类型作用域","link":"/notes/0030. 类型作用域/README"},{"text":"✅ 类型的兼容","link":"/notes/0031. 类型的兼容/README"}]},{"text":"6. 数组","collapsed":true,"items":[{"text":"✅ 数组类型","link":"/notes/0032. 数组类型/README"}]},{"text":"7. 元组","collapsed":true,"items":[{"text":"✅ 元组类型","link":"/notes/0036. 元组类型/README"}]},{"text":"8. 函数","collapsed":true,"items":[{"text":"✅ 函数类型","link":"/notes/0034. 函数类型/README"}]},{"text":"9. 对象","collapsed":true,"items":[{"text":"✅ 对象类型","link":"/notes/0033. 对象类型/README"}]},{"text":"10. 接口","collapsed":true,"items":[{"text":"✅ interface 关键字","link":"/notes/0052. interface 关键字/README"},{"text":"✅ type vs. interface","link":"/notes/0053. type vs. interface/README"}]},{"text":"11. 类","collapsed":true,"items":[{"text":"⏰ class 类型","link":"/notes/0035. class 类型/README"},{"text":"✅ 类属性严格初始化","link":"/notes/0066. 类属性严格初始化/README"},{"text":"✅ 类中的参数属性","link":"/notes/0056. 类中的参数属性/README"},{"text":"⏰ 抽象类","link":"/notes/0057. 抽象类/README"},{"text":"✅ 类中的存取器","link":"/notes/0058. 类中的存取器/README"},{"text":"✅ 类实现接口","link":"/notes/0059. 类实现接口/README"},{"text":"✅ 类中的只读属性","link":"/notes/0060. 类中的只读属性/README"},{"text":"⏰ 类的静态成员","link":"/notes/0061. 类的静态成员/README"},{"text":"⏰ 类的三个可访问性修饰符","link":"/notes/0062. 类的三个可访问性修饰符/README"},{"text":"⏰ 类的继承","link":"/notes/0064. 类的继承/README"},{"text":"⏰ 子类重写父类同名方法","link":"/notes/0063. 子类重写父类同名方法/README"},{"text":"⏰ 类的类型兼容性","link":"/notes/0065. 类的类型兼容性/README"},{"text":"✅ 类中的 this 参数和 this 类型","link":"/notes/0055. 类中的 this 参数和 this 类型/README"}]},{"text":"12. 泛型","collapsed":true,"items":[{"text":"⏰ 泛型","link":"/notes/0038. 泛型/README"}]},{"text":"13. Enum 类型","collapsed":true,"items":[{"text":"⏰ Enum 类型","link":"/notes/0037. Enum 类型/README"}]},{"text":"14. 类型断言","collapsed":true,"items":[{"text":"⏰ 类型断言","link":"/notes/0051. 类型断言/README"},{"text":"⏰ 类型断言的条件","link":"/notes/0040. 类型断言的条件/README"},{"text":"⏰ as const 断言","link":"/notes/0048. as const 断言/README"},{"text":"⏰ 非空断言","link":"/notes/0049. 非空断言/README"},{"text":"⏰ 断言函数","link":"/notes/0050. 断言函数/README"}]},{"text":"15. 模块","collapsed":true,"items":[]},{"text":"16. namespace","collapsed":true,"items":[]},{"text":"17. 装饰器","collapsed":true,"items":[]},{"text":"18. 装饰器（旧语法）","collapsed":true,"items":[]},{"text":"19. declare 关键字","collapsed":true,"items":[]},{"text":"20. d.ts 类型声明文件","collapsed":true,"items":[]},{"text":"21. 类型运算符","collapsed":true,"items":[]},{"text":"22. 类型映射","collapsed":true,"items":[]},{"text":"23. 类型工具","collapsed":true,"items":[]},{"text":"24. 注释指令","collapsed":true,"items":[]},{"text":"25. tsconfig.json 文件","collapsed":true,"items":[]},{"text":"26. tsc 命令","collapsed":true,"items":[]},{"text":"27. 深入原理","collapsed":true,"items":[{"text":"⏰ 深入原理","link":"/notes/0045. 深入原理/README"},{"text":"✅ Source Map 的基本概念和原理","link":"/notes/0043. Source Map 的基本概念和原理/README"}]},{"text":"28. 空","collapsed":true,"items":[]}]