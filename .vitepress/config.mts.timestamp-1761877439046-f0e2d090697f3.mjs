// .vitepress/config.mts
import markdownItContainer from "file:///C:/tnotesjs/TNotes.typescript/node_modules/.pnpm/markdown-it-container@4.0.0/node_modules/markdown-it-container/index.mjs";
import mila from "file:///C:/tnotesjs/TNotes.typescript/node_modules/.pnpm/markdown-it-link-attributes@4.0.1/node_modules/markdown-it-link-attributes/index.js";
import markdownItTaskLists from "file:///C:/tnotesjs/TNotes.typescript/node_modules/.pnpm/markdown-it-task-lists@2.1.1/node_modules/markdown-it-task-lists/index.js";
import {
  defineConfig
} from "file:///C:/tnotesjs/TNotes.typescript/node_modules/.pnpm/vitepress@1.6.4_@algolia+cl_c52e93a0764b5d90916653e105896dd8/node_modules/vitepress/dist/node/index.js";

// .tnotes.json
var author = "tnotesjs";
var repoName = "TNotes.typescript";
var keywords = [
  "TNotes.typescript"
];
var ignore_dirs = [
  ".vscode",
  "0000",
  "assets",
  "node_modules",
  "hidden",
  "demos",
  "assets"
];
var menuItems = [
  {
    text: "\u{1F3E0} Home",
    link: "/"
  },
  {
    text: "\u2699\uFE0F Settings",
    link: "/Settings"
  },
  {
    text: "\u{1F4D2} TNotes",
    link: "https://tnotesjs.github.io/TNotes"
  },
  {
    text: "\u{1F4C2} TNotes.yuque",
    link: "https://www.yuque.com/tdahuyou/tnotes.yuque"
  }
];
var socialLinks = [
  {
    ariaLabel: "Tdahuyou \u8BED\u96C0\u4E3B\u9875\u94FE\u63A5",
    link: "https://www.yuque.com/tdahuyou",
    icon: {
      svg: '<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24"><path fill="currentColor" d="M17.28 2.955c2.97.203 3.756 2.342 3.84 2.597l1.297.096c.13 0 .169.18.054.236c-1.323.716-1.727 2.17-1.49 3.118c.09.358.254.69.412 1.02c.307.642.651 1.418.707 2.981c.117 3.24-2.51 6.175-5.789 6.593c1.17-1.187 1.815-2.444 2.12-3.375c.606-1.846.508-3.316.055-4.44a4.46 4.46 0 0 0-1.782-2.141c-1.683-1.02-3.22-1.09-4.444-.762c.465-.594.876-1.201 1.2-1.864c.584-1.65-.102-2.848-.704-3.519c-.192-.246-.061-.655.305-.655c1.41 0 2.813.02 4.22.115M3.32 19.107c1.924-2.202 4.712-5.394 7.162-8.15c.559-.63 2.769-2.338 5.748-.533c.878.532 2.43 2.165 1.332 5.51c-.803 2.446-4.408 7.796-15.76 5.844c-.227-.039-.511-.354-.218-.687z"/></svg>'
    }
  },
  {
    ariaLabel: "Tdahuyou B \u7AD9\u4E3B\u9875\u94FE\u63A5",
    link: "https://space.bilibili.com/407241004",
    icon: {
      svg: '<svg xmlns="http://www.w3.org/2000/svg" width="1024" height="1024" viewBox="0 0 1024 1024"><g fill="currentColor"><path d="M310.134 596.45c-7.999-4.463-16.498-8.43-24.997-11.9a274 274 0 0 0-26.996-7.438c-2.5-.992-2.5.991-2.5 1.487c0 7.934.5 18.843 1.5 27.768c1 7.438 2 15.372 4 22.81c0 .496 0 .991.5 1.487c.999.992 1.999 1.488 2.999.496c7.999-4.463 15.998-8.43 22.997-13.388c7.499-5.454 15.498-11.9 21.997-18.347c1.5-1.487 0-2.479.5-2.975m323.96-11.9a274 274 0 0 0-26.997-7.438c-2.5-.992-2.5.991-2.5 1.487c0 7.934.5 18.843 1.5 27.768c1 7.438 2 15.372 4 22.81c0 .496 0 .991.5 1.487c1 .992 2 1.488 3 .496c7.999-4.463 15.998-8.43 22.997-13.388c7.499-5.454 15.498-11.9 21.997-18.347c2-1.487.5-2.479.5-2.975c-7.5-4.463-16.498-8.43-24.997-11.9"/><path d="M741.496 112H283c-94.501 0-171 76.5-171 171.5v458c.5 94 77 170.5 170.999 170.5h457.997c94.5 0 171.002-76.5 171.002-170.5v-458c.497-95-76.002-171.5-170.502-171.5m95 343.5h15.5v48h-15.5zm-95.5-1.5l2 43l-13.5 1.5l-5-44.5zm-23.5 0l4 45.5l-14.5 1.5l-6.5-47.5h17zm-230.498 1.5h15v48h-15zm-96-1.5l2 43l-13.5 1.5l-5-44.5zm-23.5 0l4 45.5l-14.5 2l-6-47.5zm-3.5 149C343.498 668.5 216 662.5 204.5 660.5C195.5 499 181.5 464 170 385l54.5-22.5c1 71.5 9 185 9 185s108.5-15.5 132 47c.5 3 0 6-1.5 8.5m20.5 35.5l-23.5-124h35.5l13 123zm44.5-8l-27-235l33.5-1.5l21 236H429zm34-175h17.5v48H467zm41 190h-26.5l-9.5-126h36zm209.998-43C693.496 668 565.997 662 554.497 660c-9-161-23-196-34.5-275l54.5-22.5c1 71.5 9 185 9 185s108.5-15.5 132 46.5c.5 3 0 6-1.5 8.5m19.5 36l-23-124h35.5l13 123zm45.5-8l-27.5-235l33.5-1.5l21 236h-27zm33.5-175h17.5v48h-13zm41 190h-26.5l-9.5-126h36z"/></g></svg>'
    }
  },
  {
    ariaLabel: "TNotes.typescript github \u4ED3\u5E93\u94FE\u63A5",
    link: "https://github.com/tnotesjs/TNotes.typescript",
    icon: "github"
  }
];

// sidebar.json
var sidebar_default = [{ text: "1. \u5B66\u4E60\u8D44\u6599", collapsed: true, items: [{ text: "\u2705 TypeScript\uFF08\u962E\u4E00\u5CF0\uFF09", link: "/notes/0002. TypeScript\uFF08\u962E\u4E00\u5CF0\uFF09/README" }, { text: "\u2705 \u672F\u8BED\u8868", link: "/notes/0054. \u672F\u8BED\u8868/README" }, { text: "\u2705 roadmap", link: "/notes/0039. roadmap/README" }, { text: "\u23F0 TS \u5B98\u65B9\u6587\u6863", link: "/notes/0073. TS \u5B98\u65B9\u6587\u6863/README" }, { text: "\u23F0 TS Github \u4ED3\u5E93", link: "/notes/0074. TS Github \u4ED3\u5E93/README" }, { text: "\u23F0 DefinitelyTyped \u9879\u76EE", link: "/notes/0075. DefinitelyTyped \u9879\u76EE/README" }] }, { text: "2. TS \u7B80\u4ECB", collapsed: true, items: [{ text: "\u2705 TS \u7B80\u4ECB", link: "/notes/0008. TS \u7B80\u4ECB/README" }, { text: "\u2705 TS \u662F\u4EC0\u4E48", link: "/notes/0001. TS \u662F\u4EC0\u4E48/README" }, { text: "\u2705 TS \u7684\u53D1\u5C55\u7B80\u53F2", link: "/notes/0003. TS \u7684\u53D1\u5C55\u7B80\u53F2/README" }, { text: "\u2705 TS \u7684\u535A\u5BA2", link: "/notes/0005. TS \u7684\u535A\u5BA2/README" }, { text: "\u2705 \u7C7B\u578B vs. \u503C", link: "/notes/0004. \u7C7B\u578B vs. \u503C/README" }, { text: "\u2705 \u9762\u5411\u5BF9\u8C61\u7684\u601D\u7EF4\u65B9\u5F0F", link: "/notes/0006. \u9762\u5411\u5BF9\u8C61\u7684\u601D\u7EF4\u65B9\u5F0F/README" }, { text: "\u2705 \u52A8\u6001\u7C7B\u578B vs. \u9759\u6001\u7C7B\u578B", link: "/notes/0007. \u52A8\u6001\u7C7B\u578B vs. \u9759\u6001\u7C7B\u578B/README" }, { text: "\u23F0 TS \u7684\u4F18\u52BF\u4E0E\u52A3\u52BF", link: "/notes/0076. TS \u7684\u4F18\u52BF\u4E0E\u52A3\u52BF/README" }, { text: "\u23F0 TS \u7684\u5E94\u7528\u573A\u666F", link: "/notes/0077. TS \u7684\u5E94\u7528\u573A\u666F/README" }] }, { text: "3. \u57FA\u672C\u7528\u6CD5", collapsed: true, items: [{ text: "\u2705 \u57FA\u672C\u7528\u6CD5", link: "/notes/0044. \u57FA\u672C\u7528\u6CD5/README" }, { text: "\u2705 \u7C7B\u578B\u58F0\u660E\u548C\u7C7B\u578B\u63A8\u65AD", link: "/notes/0009. \u7C7B\u578B\u58F0\u660E\u548C\u7C7B\u578B\u63A8\u65AD/README" }, { text: "\u2705 TS \u7684\u7F16\u8BD1", link: "/notes/0010. TS \u7684\u7F16\u8BD1/README" }, { text: "\u2705 TS Playground", link: "/notes/0011. TS Playground/README" }, { text: "\u2705 tsc \u5FEB\u901F\u5165\u95E8", link: "/notes/0012. tsc \u5FEB\u901F\u5165\u95E8/README" }, { text: "\u23F0 tsconfig.json \u5FEB\u901F\u5165\u95E8", link: "/notes/0078. tsconfig.json \u5FEB\u901F\u5165\u95E8/README" }, { text: "\u2705 ts-node \u5FEB\u901F\u5165\u95E8", link: "/notes/0013. ts-node \u5FEB\u901F\u5165\u95E8/README" }, { text: "\u2705 nodemon \u5FEB\u901F\u5165\u95E8", link: "/notes/0041. nodemon \u5FEB\u901F\u5165\u95E8/README" }, { text: "\u2705 ts-node-dev \u5FEB\u901F\u5165\u95E8", link: "/notes/0042. ts-node-dev \u5FEB\u901F\u5165\u95E8/README" }] }, { text: "4. \u9876\u5C42\u7C7B\u578B\u548C\u5E95\u5C42\u7C7B\u578B", collapsed: true, items: [{ text: "\u2705 \u9876\u5C42\u7C7B\u578B\u548C\u5E95\u5C42\u7C7B\u578B", link: "/notes/0046. \u9876\u5C42\u7C7B\u578B\u548C\u5E95\u5C42\u7C7B\u578B/README" }, { text: "\u2705 any \u7C7B\u578B", link: "/notes/0014. any \u7C7B\u578B/README" }, { text: "\u2705 unknown \u7C7B\u578B", link: "/notes/0015. unknown \u7C7B\u578B/README" }, { text: "\u2705 never \u7C7B\u578B", link: "/notes/0016. never \u7C7B\u578B/README" }, { text: "\u23F0 void \u7C7B\u578B", link: "/notes/0079. void \u7C7B\u578B/README" }] }, { text: "5. \u7C7B\u578B\u7CFB\u7EDF\u57FA\u7840\u77E5\u8BC6", collapsed: true, items: [{ text: "\u2705 boolean \u7C7B\u578B", link: "/notes/0018. boolean \u7C7B\u578B/README" }, { text: "\u2705 string \u7C7B\u578B", link: "/notes/0019. string \u7C7B\u578B/README" }, { text: "\u2705 number \u7C7B\u578B", link: "/notes/0020. number \u7C7B\u578B/README" }, { text: "\u2705 bigint \u7C7B\u578B", link: "/notes/0021. bigint \u7C7B\u578B/README" }, { text: "\u2705 symbol \u7C7B\u578B", link: "/notes/0022. symbol \u7C7B\u578B/README" }, { text: "\u2705 object \u7C7B\u578B\u548C Object \u7C7B\u578B", link: "/notes/0023. object \u7C7B\u578B\u548C Object \u7C7B\u578B/README" }, { text: "\u2705 undefined \u7C7B\u578B\u548C null \u7C7B\u578B", link: "/notes/0024. undefined \u7C7B\u578B\u548C null \u7C7B\u578B/README" }, { text: "\u2705 \u5305\u88C5\u5BF9\u8C61\u7C7B\u578B", link: "/notes/0047. \u5305\u88C5\u5BF9\u8C61\u7C7B\u578B/README" }, { text: "\u2705 \u5B57\u9762\u91CF\u7C7B\u578B", link: "/notes/0025. \u5B57\u9762\u91CF\u7C7B\u578B/README" }, { text: "\u2705 \u8054\u5408\u7C7B\u578B", link: "/notes/0026. \u8054\u5408\u7C7B\u578B/README" }, { text: "\u2705 \u4EA4\u53C9\u7C7B\u578B", link: "/notes/0027. \u4EA4\u53C9\u7C7B\u578B/README" }, { text: "\u2705 type \u5173\u952E\u5B57", link: "/notes/0028. type \u5173\u952E\u5B57/README" }, { text: "\u2705 typeof \u8FD0\u7B97\u7B26", link: "/notes/0029. typeof \u8FD0\u7B97\u7B26/README" }, { text: "\u2705 \u7C7B\u578B\u4F5C\u7528\u57DF", link: "/notes/0030. \u7C7B\u578B\u4F5C\u7528\u57DF/README" }] }, { text: "6. \u7C7B\u578B\u517C\u5BB9\u6027", collapsed: true, items: [{ text: "\u2705 \u7C7B\u578B\u517C\u5BB9\u6027", link: "/notes/0031. \u7C7B\u578B\u517C\u5BB9\u6027/README" }, { text: "\u2705 \u7ED3\u6784\u5B50\u7C7B\u578B", link: "/notes/0067. \u7ED3\u6784\u5B50\u7C7B\u578B/README" }, { text: "\u2705 \u7C7B\u578B\u7684\u7236\u5B50\u5173\u7CFB", link: "/notes/0072. \u7C7B\u578B\u7684\u7236\u5B50\u5173\u7CFB/README" }, { text: "\u2705 \u5BF9\u8C61\u7C7B\u578B\u7684\u517C\u5BB9\u6027\u89C4\u5219", link: "/notes/0068. \u5BF9\u8C61\u7C7B\u578B\u7684\u517C\u5BB9\u6027\u89C4\u5219/README" }, { text: "\u2705 \u51FD\u6570\u7C7B\u578B\u7684\u517C\u5BB9\u6027\u89C4\u5219", link: "/notes/0069. \u51FD\u6570\u7C7B\u578B\u7684\u517C\u5BB9\u6027\u89C4\u5219/README" }, { text: "\u2705 \u7C7B\u7C7B\u578B\u7684\u517C\u5BB9\u6027\u89C4\u5219", link: "/notes/0071. \u7C7B\u7C7B\u578B\u7684\u517C\u5BB9\u6027\u89C4\u5219/README" }, { text: "\u23F0 \u6CDB\u578B\u7C7B\u578B\u7684\u517C\u5BB9\u6027\u89C4\u5219", link: "/notes/0070. \u6CDB\u578B\u7C7B\u578B\u7684\u517C\u5BB9\u6027\u89C4\u5219/README" }, { text: "\u2705 \u7279\u6B8A\u7C7B\u578B\u4E4B\u95F4\u7684\u517C\u5BB9\u6027", link: "/notes/0017. \u7279\u6B8A\u7C7B\u578B\u4E4B\u95F4\u7684\u517C\u5BB9\u6027/README" }, { text: "\u23F0 \u534F\u53D8\u4E0E\u9006\u53D8", link: "/notes/0080. \u534F\u53D8\u4E0E\u9006\u53D8/README" }, { text: "\u23F0 \u53CC\u5411\u534F\u53D8\u95EE\u9898", link: "/notes/0081. \u53CC\u5411\u534F\u53D8\u95EE\u9898/README" }] }, { text: "7. \u6570\u7EC4", collapsed: true, items: [{ text: "\u2705 \u6570\u7EC4\u7C7B\u578B", link: "/notes/0032. \u6570\u7EC4\u7C7B\u578B/README" }, { text: "\u23F0 \u6570\u7EC4\u7684\u4E24\u79CD\u7C7B\u578B\u58F0\u660E\u65B9\u5F0F", link: "/notes/0082. \u6570\u7EC4\u7684\u4E24\u79CD\u7C7B\u578B\u58F0\u660E\u65B9\u5F0F/README" }, { text: "\u23F0 \u53EA\u8BFB\u6570\u7EC4 ReadonlyArray", link: "/notes/0083. \u53EA\u8BFB\u6570\u7EC4 ReadonlyArray/README" }, { text: "\u23F0 \u6570\u7EC4\u7684\u7C7B\u578B\u63A8\u65AD", link: "/notes/0084. \u6570\u7EC4\u7684\u7C7B\u578B\u63A8\u65AD/README" }, { text: "\u23F0 \u591A\u7EF4\u6570\u7EC4", link: "/notes/0085. \u591A\u7EF4\u6570\u7EC4/README" }] }, { text: "8. \u5143\u7EC4", collapsed: true, items: [{ text: "\u2705 \u5143\u7EC4\u7C7B\u578B", link: "/notes/0036. \u5143\u7EC4\u7C7B\u578B/README" }, { text: "\u23F0 \u5143\u7EC4\u53EF\u9009\u5143\u7D20", link: "/notes/0086. \u5143\u7EC4\u53EF\u9009\u5143\u7D20/README" }, { text: "\u23F0 \u5143\u7EC4\u5269\u4F59\u5143\u7D20", link: "/notes/0087. \u5143\u7EC4\u5269\u4F59\u5143\u7D20/README" }, { text: "\u23F0 \u5143\u7EC4\u53EA\u8BFB\u5143\u7D20", link: "/notes/0088. \u5143\u7EC4\u53EA\u8BFB\u5143\u7D20/README" }, { text: "\u23F0 \u5177\u540D\u5143\u7EC4", link: "/notes/0089. \u5177\u540D\u5143\u7EC4/README" }, { text: "\u23F0 \u5143\u7EC4 vs. \u6570\u7EC4", link: "/notes/0090. \u5143\u7EC4 vs. \u6570\u7EC4/README" }] }, { text: "9. \u51FD\u6570", collapsed: true, items: [{ text: "\u2705 \u51FD\u6570\u7C7B\u578B", link: "/notes/0034. \u51FD\u6570\u7C7B\u578B/README" }, { text: "\u23F0 \u51FD\u6570\u8868\u8FBE\u5F0F\u7C7B\u578B", link: "/notes/0091. \u51FD\u6570\u8868\u8FBE\u5F0F\u7C7B\u578B/README" }, { text: "\u23F0 \u53EF\u9009\u53C2\u6570\u4E0E\u9ED8\u8BA4\u53C2\u6570", link: "/notes/0092. \u53EF\u9009\u53C2\u6570\u4E0E\u9ED8\u8BA4\u53C2\u6570/README" }, { text: "\u23F0 \u5269\u4F59\u53C2\u6570", link: "/notes/0093. \u5269\u4F59\u53C2\u6570/README" }, { text: "\u23F0 \u51FD\u6570\u91CD\u8F7D", link: "/notes/0094. \u51FD\u6570\u91CD\u8F7D/README" }, { text: "\u23F0 \u6784\u9020\u51FD\u6570\u7C7B\u578B", link: "/notes/0095. \u6784\u9020\u51FD\u6570\u7C7B\u578B/README" }, { text: "\u23F0 \u51FD\u6570\u7684 void \u8FD4\u56DE\u7C7B\u578B\u7684\u7279\u6B8A\u6027", link: "/notes/0096. \u51FD\u6570\u7684 void \u8FD4\u56DE\u7C7B\u578B\u7684\u7279\u6B8A\u6027/README" }, { text: "\u23F0 \u51FD\u6570\u7684 this \u53C2\u6570", link: "/notes/0097. \u51FD\u6570\u7684 this \u53C2\u6570/README" }, { text: "\u23F0 \u51FD\u6570\u7C7B\u578B\u8868\u8FBE\u5F0F vs. \u8C03\u7528\u7B7E\u540D", link: "/notes/0098. \u51FD\u6570\u7C7B\u578B\u8868\u8FBE\u5F0F vs. \u8C03\u7528\u7B7E\u540D/README" }] }, { text: "10. \u5BF9\u8C61", collapsed: true, items: [{ text: "\u2705 \u5BF9\u8C61\u7C7B\u578B", link: "/notes/0033. \u5BF9\u8C61\u7C7B\u578B/README" }, { text: "\u23F0 \u5BF9\u8C61\u53EA\u8BFB\u5C5E\u6027", link: "/notes/0099. \u5BF9\u8C61\u53EA\u8BFB\u5C5E\u6027/README" }, { text: "\u23F0 \u5BF9\u8C61\u53EF\u9009\u5C5E\u6027", link: "/notes/0100. \u5BF9\u8C61\u53EF\u9009\u5C5E\u6027/README" }, { text: "\u23F0 \u5BF9\u8C61\u7D22\u5F15\u7B7E\u540D", link: "/notes/0101. \u5BF9\u8C61\u7D22\u5F15\u7B7E\u540D/README" }, { text: "\u23F0 \u5BF9\u8C61\u7684\u989D\u5916\u5C5E\u6027\u68C0\u67E5", link: "/notes/0102. \u5BF9\u8C61\u7684\u989D\u5916\u5C5E\u6027\u68C0\u67E5/README" }, { text: "\u23F0 \u5BF9\u8C61\u7C7B\u578B\u7684\u6269\u5C55", link: "/notes/0103. \u5BF9\u8C61\u7C7B\u578B\u7684\u6269\u5C55/README" }, { text: "\u23F0 \u4F7F\u7528 Record \u5DE5\u5177\u7C7B\u578B\u7EA6\u675F\u5BF9\u8C61", link: "/notes/0104. \u4F7F\u7528 Record \u5DE5\u5177\u7C7B\u578B\u7EA6\u675F\u5BF9\u8C61/README" }] }, { text: "11. \u63A5\u53E3", collapsed: true, items: [{ text: "\u2705 interface \u5173\u952E\u5B57", link: "/notes/0052. interface \u5173\u952E\u5B57/README" }, { text: "\u23F0 \u63A5\u53E3\u7684\u7EE7\u627F", link: "/notes/0105. \u63A5\u53E3\u7684\u7EE7\u627F/README" }, { text: "\u23F0 \u63A5\u53E3\u7684\u5408\u5E76\uFF08\u58F0\u660E\u5408\u5E76\uFF09", link: "/notes/0106. \u63A5\u53E3\u7684\u5408\u5E76\uFF08\u58F0\u660E\u5408\u5E76\uFF09/README" }, { text: "\u23F0 \u63A5\u53E3\u7684\u7D22\u5F15\u7B7E\u540D", link: "/notes/0107. \u63A5\u53E3\u7684\u7D22\u5F15\u7B7E\u540D/README" }, { text: "\u23F0 \u63A5\u53E3\u7684\u8C03\u7528\u7B7E\u540D", link: "/notes/0108. \u63A5\u53E3\u7684\u8C03\u7528\u7B7E\u540D/README" }, { text: "\u23F0 \u63A5\u53E3\u7684\u6784\u9020\u7B7E\u540D", link: "/notes/0109. \u63A5\u53E3\u7684\u6784\u9020\u7B7E\u540D/README" }, { text: "\u23F0 \u6DF7\u5408\u7C7B\u578B\u63A5\u53E3", link: "/notes/0110. \u6DF7\u5408\u7C7B\u578B\u63A5\u53E3/README" }, { text: "\u2705 type vs. interface", link: "/notes/0053. type vs. interface/README" }] }, { text: "12. \u7C7B", collapsed: true, items: [{ text: "\u23F0 class \u7C7B\u578B", link: "/notes/0035. class \u7C7B\u578B/README" }, { text: "\u2705 \u7C7B\u5C5E\u6027\u4E25\u683C\u521D\u59CB\u5316", link: "/notes/0066. \u7C7B\u5C5E\u6027\u4E25\u683C\u521D\u59CB\u5316/README" }, { text: "\u2705 \u7C7B\u4E2D\u7684\u53C2\u6570\u5C5E\u6027", link: "/notes/0056. \u7C7B\u4E2D\u7684\u53C2\u6570\u5C5E\u6027/README" }, { text: "\u23F0 \u62BD\u8C61\u7C7B", link: "/notes/0057. \u62BD\u8C61\u7C7B/README" }, { text: "\u2705 \u7C7B\u4E2D\u7684\u5B58\u53D6\u5668", link: "/notes/0058. \u7C7B\u4E2D\u7684\u5B58\u53D6\u5668/README" }, { text: "\u2705 \u7C7B\u5B9E\u73B0\u63A5\u53E3", link: "/notes/0059. \u7C7B\u5B9E\u73B0\u63A5\u53E3/README" }, { text: "\u2705 \u7C7B\u4E2D\u7684\u53EA\u8BFB\u5C5E\u6027", link: "/notes/0060. \u7C7B\u4E2D\u7684\u53EA\u8BFB\u5C5E\u6027/README" }, { text: "\u2705 \u7C7B\u7684\u9759\u6001\u6210\u5458", link: "/notes/0061. \u7C7B\u7684\u9759\u6001\u6210\u5458/README" }, { text: "\u2705 \u7C7B\u7684\u4E09\u4E2A\u53EF\u8BBF\u95EE\u6027\u4FEE\u9970\u7B26", link: "/notes/0062. \u7C7B\u7684\u4E09\u4E2A\u53EF\u8BBF\u95EE\u6027\u4FEE\u9970\u7B26/README" }, { text: "\u2705 \u7C7B\u7684\u7EE7\u627F", link: "/notes/0064. \u7C7B\u7684\u7EE7\u627F/README" }, { text: "\u23F0 \u5B50\u7C7B\u91CD\u5199\u7236\u7C7B\u540C\u540D\u6210\u5458", link: "/notes/0063. \u5B50\u7C7B\u91CD\u5199\u7236\u7C7B\u540C\u540D\u6210\u5458/README" }, { text: "\u2705 \u7C7B\u4E2D\u7684 this \u53C2\u6570\u548C this \u7C7B\u578B", link: "/notes/0055. \u7C7B\u4E2D\u7684 this \u53C2\u6570\u548C this \u7C7B\u578B/README" }, { text: "\u2705 \u7C7B\u4E0E\u51FD\u6570\u7684\u9009\u62E9", link: "/notes/0065. \u7C7B\u4E0E\u51FD\u6570\u7684\u9009\u62E9/README" }, { text: "\u23F0 \u7C7B\u7684\u7C7B\u578B", link: "/notes/0111. \u7C7B\u7684\u7C7B\u578B/README" }, { text: "\u23F0 \u7C7B\u7684\u7ED3\u6784\u7C7B\u578B", link: "/notes/0112. \u7C7B\u7684\u7ED3\u6784\u7C7B\u578B/README" }, { text: "\u23F0 \u7C7B\u7684 implements \u5B50\u53E5", link: "/notes/0113. \u7C7B\u7684 implements \u5B50\u53E5/README" }, { text: "\u23F0 \u7C7B\u7684\u9759\u6001\u5757", link: "/notes/0114. \u7C7B\u7684\u9759\u6001\u5757/README" }] }, { text: "13. \u6CDB\u578B", collapsed: true, items: [{ text: "\u23F0 \u6CDB\u578B", link: "/notes/0038. \u6CDB\u578B/README" }, { text: "\u23F0 \u6CDB\u578B\u7C7B", link: "/notes/0115. \u6CDB\u578B\u7C7B/README" }, { text: "\u23F0 \u6CDB\u578B\u51FD\u6570", link: "/notes/0116. \u6CDB\u578B\u51FD\u6570/README" }, { text: "\u23F0 \u6CDB\u578B\u63A5\u53E3", link: "/notes/0117. \u6CDB\u578B\u63A5\u53E3/README" }, { text: "\u23F0 \u6CDB\u578B\u7EA6\u675F", link: "/notes/0118. \u6CDB\u578B\u7EA6\u675F/README" }, { text: "\u23F0 \u5728\u6CDB\u578B\u7EA6\u675F\u4E2D\u4F7F\u7528\u7C7B\u578B\u53C2\u6570", link: "/notes/0119. \u5728\u6CDB\u578B\u7EA6\u675F\u4E2D\u4F7F\u7528\u7C7B\u578B\u53C2\u6570/README" }, { text: "\u23F0 \u5728\u6CDB\u578B\u4E2D\u4F7F\u7528\u7C7B\u7C7B\u578B", link: "/notes/0120. \u5728\u6CDB\u578B\u4E2D\u4F7F\u7528\u7C7B\u7C7B\u578B/README" }, { text: "\u23F0 \u6CDB\u578B\u9ED8\u8BA4\u503C", link: "/notes/0121. \u6CDB\u578B\u9ED8\u8BA4\u503C/README" }, { text: "\u23F0 \u6CDB\u578B\u7684\u6700\u4F73\u5B9E\u8DF5", link: "/notes/0122. \u6CDB\u578B\u7684\u6700\u4F73\u5B9E\u8DF5/README" }] }, { text: "14. Enum \u7C7B\u578B", collapsed: true, items: [{ text: "\u23F0 Enum \u7C7B\u578B", link: "/notes/0037. Enum \u7C7B\u578B/README" }, { text: "\u23F0 \u6570\u5B57\u679A\u4E3E", link: "/notes/0123. \u6570\u5B57\u679A\u4E3E/README" }, { text: "\u23F0 \u5B57\u7B26\u4E32\u679A\u4E3E", link: "/notes/0124. \u5B57\u7B26\u4E32\u679A\u4E3E/README" }, { text: "\u23F0 \u5F02\u6784\u679A\u4E3E", link: "/notes/0125. \u5F02\u6784\u679A\u4E3E/README" }, { text: "\u23F0 \u5E38\u91CF\u679A\u4E3E\uFF08const enum\uFF09", link: "/notes/0126. \u5E38\u91CF\u679A\u4E3E\uFF08const enum\uFF09/README" }, { text: "\u23F0 \u5916\u90E8\u679A\u4E3E\uFF08ambient enum\uFF09", link: "/notes/0127. \u5916\u90E8\u679A\u4E3E\uFF08ambient enum\uFF09/README" }, { text: "\u23F0 \u679A\u4E3E\u6210\u5458\u7684\u7C7B\u578B", link: "/notes/0128. \u679A\u4E3E\u6210\u5458\u7684\u7C7B\u578B/README" }, { text: "\u23F0 \u53CD\u5411\u6620\u5C04", link: "/notes/0129. \u53CD\u5411\u6620\u5C04/README" }, { text: "\u23F0 \u679A\u4E3E vs. \u5BF9\u8C61\u5B57\u9762\u91CF", link: "/notes/0130. \u679A\u4E3E vs. \u5BF9\u8C61\u5B57\u9762\u91CF/README" }] }, { text: "15. \u7C7B\u578B\u65AD\u8A00", collapsed: true, items: [{ text: "\u23F0 \u7C7B\u578B\u65AD\u8A00", link: "/notes/0051. \u7C7B\u578B\u65AD\u8A00/README" }, { text: "\u23F0 \u7C7B\u578B\u65AD\u8A00\u7684\u6761\u4EF6", link: "/notes/0040. \u7C7B\u578B\u65AD\u8A00\u7684\u6761\u4EF6/README" }, { text: "\u23F0 as const \u65AD\u8A00", link: "/notes/0048. as const \u65AD\u8A00/README" }, { text: "\u23F0 \u975E\u7A7A\u65AD\u8A00", link: "/notes/0049. \u975E\u7A7A\u65AD\u8A00/README" }, { text: "\u23F0 \u65AD\u8A00\u51FD\u6570", link: "/notes/0050. \u65AD\u8A00\u51FD\u6570/README" }, { text: "\u23F0 \u53CC\u91CD\u65AD\u8A00", link: "/notes/0131. \u53CC\u91CD\u65AD\u8A00/README" }, { text: "\u23F0 \u7C7B\u578B\u65AD\u8A00\u7684\u4F7F\u7528\u573A\u666F", link: "/notes/0132. \u7C7B\u578B\u65AD\u8A00\u7684\u4F7F\u7528\u573A\u666F/README" }, { text: "\u23F0 \u7C7B\u578B\u65AD\u8A00 vs. \u7C7B\u578B\u58F0\u660E", link: "/notes/0133. \u7C7B\u578B\u65AD\u8A00 vs. \u7C7B\u578B\u58F0\u660E/README" }] }, { text: "16. \u6A21\u5757", collapsed: true, items: [{ text: "\u23F0 ES \u6A21\u5757\u7CFB\u7EDF", link: "/notes/0134. ES \u6A21\u5757\u7CFB\u7EDF/README" }, { text: "\u23F0 CommonJS \u6A21\u5757\u7CFB\u7EDF", link: "/notes/0135. CommonJS \u6A21\u5757\u7CFB\u7EDF/README" }, { text: "\u23F0 \u6A21\u5757\u89E3\u6790\u7B56\u7565", link: "/notes/0136. \u6A21\u5757\u89E3\u6790\u7B56\u7565/README" }, { text: "\u23F0 \u76F8\u5BF9\u5BFC\u5165 vs. \u975E\u76F8\u5BF9\u5BFC\u5165", link: "/notes/0137. \u76F8\u5BF9\u5BFC\u5165 vs. \u975E\u76F8\u5BF9\u5BFC\u5165/README" }, { text: "\u23F0 \u6A21\u5757\u89E3\u6790\u7684 baseUrl \u548C paths", link: "/notes/0138. \u6A21\u5757\u89E3\u6790\u7684 baseUrl \u548C paths/README" }, { text: "\u23F0 \u5BFC\u51FA\u548C\u5BFC\u5165\u7C7B\u578B", link: "/notes/0139. \u5BFC\u51FA\u548C\u5BFC\u5165\u7C7B\u578B/README" }, { text: "\u23F0 export type \u548C import type", link: "/notes/0140. export type \u548C import type/README" }, { text: "\u23F0 \u9ED8\u8BA4\u5BFC\u51FA vs. \u547D\u540D\u5BFC\u51FA", link: "/notes/0141. \u9ED8\u8BA4\u5BFC\u51FA vs. \u547D\u540D\u5BFC\u51FA/README" }, { text: "\u23F0 \u52A8\u6001\u5BFC\u5165", link: "/notes/0142. \u52A8\u6001\u5BFC\u5165/README" }, { text: "\u23F0 \u6A21\u5757\u7684\u7C7B\u578B\u58F0\u660E", link: "/notes/0143. \u6A21\u5757\u7684\u7C7B\u578B\u58F0\u660E/README" }, { text: "\u23F0 esModuleInterop \u914D\u7F6E\u9879", link: "/notes/0144. esModuleInterop \u914D\u7F6E\u9879/README" }, { text: "\u23F0 allowSyntheticDefaultImports \u914D\u7F6E\u9879", link: "/notes/0145. allowSyntheticDefaultImports \u914D\u7F6E\u9879/README" }] }, { text: "17. namespace", collapsed: true, items: [{ text: "\u23F0 namespace \u5173\u952E\u5B57", link: "/notes/0146. namespace \u5173\u952E\u5B57/README" }, { text: "\u23F0 \u547D\u540D\u7A7A\u95F4\u7684\u57FA\u672C\u4F7F\u7528", link: "/notes/0147. \u547D\u540D\u7A7A\u95F4\u7684\u57FA\u672C\u4F7F\u7528/README" }, { text: "\u23F0 \u5D4C\u5957\u547D\u540D\u7A7A\u95F4", link: "/notes/0148. \u5D4C\u5957\u547D\u540D\u7A7A\u95F4/README" }, { text: "\u23F0 \u547D\u540D\u7A7A\u95F4\u7684\u5408\u5E76", link: "/notes/0149. \u547D\u540D\u7A7A\u95F4\u7684\u5408\u5E76/README" }, { text: "\u23F0 \u547D\u540D\u7A7A\u95F4 vs. \u6A21\u5757", link: "/notes/0150. \u547D\u540D\u7A7A\u95F4 vs. \u6A21\u5757/README" }, { text: "\u23F0 \u4F55\u65F6\u4F7F\u7528\u547D\u540D\u7A7A\u95F4", link: "/notes/0151. \u4F55\u65F6\u4F7F\u7528\u547D\u540D\u7A7A\u95F4/README" }, { text: "\u23F0 \u547D\u540D\u7A7A\u95F4\u7684\u522B\u540D", link: "/notes/0152. \u547D\u540D\u7A7A\u95F4\u7684\u522B\u540D/README" }, { text: "\u23F0 \u547D\u540D\u7A7A\u95F4\u7684\u5BFC\u51FA", link: "/notes/0153. \u547D\u540D\u7A7A\u95F4\u7684\u5BFC\u51FA/README" }] }, { text: "18. \u88C5\u9970\u5668", collapsed: true, items: [{ text: "\u23F0 \u88C5\u9970\u5668\u7684\u6982\u5FF5", link: "/notes/0154. \u88C5\u9970\u5668\u7684\u6982\u5FF5/README" }, { text: "\u23F0 \u88C5\u9970\u5668\u7684\u542F\u7528\uFF08experimentalDecorators\uFF09", link: "/notes/0155. \u88C5\u9970\u5668\u7684\u542F\u7528\uFF08experimentalDecorators\uFF09/README" }, { text: "\u23F0 \u7C7B\u88C5\u9970\u5668", link: "/notes/0156. \u7C7B\u88C5\u9970\u5668/README" }, { text: "\u23F0 \u65B9\u6CD5\u88C5\u9970\u5668", link: "/notes/0157. \u65B9\u6CD5\u88C5\u9970\u5668/README" }, { text: "\u23F0 \u8BBF\u95EE\u5668\u88C5\u9970\u5668", link: "/notes/0158. \u8BBF\u95EE\u5668\u88C5\u9970\u5668/README" }, { text: "\u23F0 \u5C5E\u6027\u88C5\u9970\u5668", link: "/notes/0159. \u5C5E\u6027\u88C5\u9970\u5668/README" }, { text: "\u23F0 \u53C2\u6570\u88C5\u9970\u5668", link: "/notes/0160. \u53C2\u6570\u88C5\u9970\u5668/README" }, { text: "\u23F0 \u88C5\u9970\u5668\u7684\u6267\u884C\u987A\u5E8F", link: "/notes/0161. \u88C5\u9970\u5668\u7684\u6267\u884C\u987A\u5E8F/README" }, { text: "\u23F0 \u88C5\u9970\u5668\u5DE5\u5382", link: "/notes/0162. \u88C5\u9970\u5668\u5DE5\u5382/README" }, { text: "\u23F0 \u88C5\u9970\u5668\u7EC4\u5408", link: "/notes/0163. \u88C5\u9970\u5668\u7EC4\u5408/README" }] }, { text: "19. \u88C5\u9970\u5668\uFF08\u65E7\u8BED\u6CD5\uFF09", collapsed: true, items: [{ text: "\u23F0 Stage 2 \u88C5\u9970\u5668\u63D0\u6848", link: "/notes/0164. Stage 2 \u88C5\u9970\u5668\u63D0\u6848/README" }, { text: "\u23F0 \u65E7\u88C5\u9970\u5668 vs. \u65B0\u88C5\u9970\u5668", link: "/notes/0165. \u65E7\u88C5\u9970\u5668 vs. \u65B0\u88C5\u9970\u5668/README" }, { text: "\u23F0 \u65E7\u88C5\u9970\u5668\u7684\u5143\u6570\u636E", link: "/notes/0166. \u65E7\u88C5\u9970\u5668\u7684\u5143\u6570\u636E/README" }, { text: "\u23F0 reflect-metadata \u5E93", link: "/notes/0167. reflect-metadata \u5E93/README" }, { text: "\u23F0 \u88C5\u9970\u5668\u7684\u8FC1\u79FB\u6307\u5357", link: "/notes/0168. \u88C5\u9970\u5668\u7684\u8FC1\u79FB\u6307\u5357/README" }] }, { text: "20. declare \u5173\u952E\u5B57", collapsed: true, items: [{ text: "\u23F0 declare \u7684\u4F5C\u7528", link: "/notes/0169. declare \u7684\u4F5C\u7528/README" }, { text: "\u23F0 declare \u58F0\u660E\u51FD\u6570", link: "/notes/0170. declare \u58F0\u660E\u51FD\u6570/README" }, { text: "\u23F0 declare \u58F0\u660E\u53D8\u91CF", link: "/notes/0171. declare \u58F0\u660E\u53D8\u91CF/README" }, { text: "\u23F0 declare \u58F0\u660E\u7C7B", link: "/notes/0172. declare \u58F0\u660E\u7C7B/README" }, { text: "\u23F0 declare \u58F0\u660E\u679A\u4E3E", link: "/notes/0173. declare \u58F0\u660E\u679A\u4E3E/README" }, { text: "\u23F0 declare \u58F0\u660E\u547D\u540D\u7A7A\u95F4", link: "/notes/0174. declare \u58F0\u660E\u547D\u540D\u7A7A\u95F4/README" }, { text: "\u23F0 declare module \u6269\u5C55\u6A21\u5757", link: "/notes/0175. declare module \u6269\u5C55\u6A21\u5757/README" }, { text: "\u23F0 declare global \u6269\u5C55\u5168\u5C40", link: "/notes/0176. declare global \u6269\u5C55\u5168\u5C40/README" }, { text: "\u23F0 \u73AF\u5883\u58F0\u660E\u7684\u4F7F\u7528\u573A\u666F", link: "/notes/0177. \u73AF\u5883\u58F0\u660E\u7684\u4F7F\u7528\u573A\u666F/README" }] }, { text: "21. d.ts \u7C7B\u578B\u58F0\u660E\u6587\u4EF6", collapsed: true, items: [{ text: "\u23F0 \u7C7B\u578B\u58F0\u660E\u6587\u4EF6\u7684\u4F5C\u7528", link: "/notes/0178. \u7C7B\u578B\u58F0\u660E\u6587\u4EF6\u7684\u4F5C\u7528/README" }, { text: "\u23F0 \u81EA\u52A8\u751F\u6210 d.ts \u6587\u4EF6", link: "/notes/0179. \u81EA\u52A8\u751F\u6210 d.ts \u6587\u4EF6/README" }, { text: "\u23F0 \u624B\u52A8\u7F16\u5199 d.ts \u6587\u4EF6", link: "/notes/0180. \u624B\u52A8\u7F16\u5199 d.ts \u6587\u4EF6/README" }, { text: "\u23F0 \u4E09\u659C\u7EBF\u6307\u4EE4", link: "/notes/0181. \u4E09\u659C\u7EBF\u6307\u4EE4/README" }, { text: "\u23F0 @types \u5305\u7684\u4F7F\u7528", link: "/notes/0182. @types \u5305\u7684\u4F7F\u7528/README" }, { text: "\u23F0 typeRoots \u548C types \u914D\u7F6E", link: "/notes/0183. typeRoots \u548C types \u914D\u7F6E/README" }, { text: "\u23F0 \u6A21\u5757\u7684\u7C7B\u578B\u58F0\u660E", link: "/notes/0184. \u6A21\u5757\u7684\u7C7B\u578B\u58F0\u660E/README" }, { text: "\u23F0 \u5168\u5C40\u7C7B\u578B\u58F0\u660E", link: "/notes/0185. \u5168\u5C40\u7C7B\u578B\u58F0\u660E/README" }, { text: "\u23F0 UMD \u6A21\u5757\u7684\u7C7B\u578B\u58F0\u660E", link: "/notes/0186. UMD \u6A21\u5757\u7684\u7C7B\u578B\u58F0\u660E/README" }, { text: "\u23F0 \u53D1\u5E03\u7C7B\u578B\u58F0\u660E\u6587\u4EF6", link: "/notes/0187. \u53D1\u5E03\u7C7B\u578B\u58F0\u660E\u6587\u4EF6/README" }] }, { text: "22. \u7C7B\u578B\u8FD0\u7B97\u7B26", collapsed: true, items: [{ text: "\u23F0 keyof \u8FD0\u7B97\u7B26", link: "/notes/0188. keyof \u8FD0\u7B97\u7B26/README" }, { text: "\u23F0 in \u8FD0\u7B97\u7B26", link: "/notes/0189. in \u8FD0\u7B97\u7B26/README" }, { text: "\u23F0 extends \u6761\u4EF6\u7C7B\u578B", link: "/notes/0190. extends \u6761\u4EF6\u7C7B\u578B/README" }, { text: "\u23F0 infer \u5173\u952E\u5B57", link: "/notes/0191. infer \u5173\u952E\u5B57/README" }, { text: "\u23F0 \u7D22\u5F15\u8BBF\u95EE\u7C7B\u578B", link: "/notes/0192. \u7D22\u5F15\u8BBF\u95EE\u7C7B\u578B/README" }, { text: "\u23F0 \u6761\u4EF6\u7C7B\u578B", link: "/notes/0193. \u6761\u4EF6\u7C7B\u578B/README" }, { text: "\u23F0 \u6761\u4EF6\u7C7B\u578B\u7684\u5206\u5E03\u5F0F\u7279\u6027", link: "/notes/0194. \u6761\u4EF6\u7C7B\u578B\u7684\u5206\u5E03\u5F0F\u7279\u6027/README" }, { text: "\u23F0 \u6620\u5C04\u7C7B\u578B", link: "/notes/0195. \u6620\u5C04\u7C7B\u578B/README" }, { text: "\u23F0 \u6A21\u677F\u5B57\u9762\u91CF\u7C7B\u578B", link: "/notes/0196. \u6A21\u677F\u5B57\u9762\u91CF\u7C7B\u578B/README" }, { text: "\u23F0 satisfies \u8FD0\u7B97\u7B26", link: "/notes/0197. satisfies \u8FD0\u7B97\u7B26/README" }] }, { text: "23. \u7C7B\u578B\u6620\u5C04", collapsed: true, items: [{ text: "\u23F0 \u6620\u5C04\u7C7B\u578B\u7684\u57FA\u672C\u8BED\u6CD5", link: "/notes/0198. \u6620\u5C04\u7C7B\u578B\u7684\u57FA\u672C\u8BED\u6CD5/README" }, { text: "\u23F0 \u6620\u5C04\u4FEE\u9970\u7B26\uFF08+ \u548C -\uFF09", link: "/notes/0199. \u6620\u5C04\u4FEE\u9970\u7B26\uFF08+ \u548C -\uFF09/README" }, { text: "\u23F0 readonly \u548C \uFF1F \u4FEE\u9970\u7B26", link: "/notes/0200. readonly \u548C \uFF1F \u4FEE\u9970\u7B26/README" }, { text: "\u23F0 \u952E\u540D\u91CD\u6620\u5C04\uFF08as \u5B50\u53E5\uFF09", link: "/notes/0201. \u952E\u540D\u91CD\u6620\u5C04\uFF08as \u5B50\u53E5\uFF09/README" }, { text: "\u23F0 \u6620\u5C04\u7C7B\u578B\u7684\u8FC7\u6EE4", link: "/notes/0202. \u6620\u5C04\u7C7B\u578B\u7684\u8FC7\u6EE4/README" }, { text: "\u23F0 \u57FA\u4E8E\u6620\u5C04\u7C7B\u578B\u521B\u5EFA\u65B0\u7C7B\u578B", link: "/notes/0203. \u57FA\u4E8E\u6620\u5C04\u7C7B\u578B\u521B\u5EFA\u65B0\u7C7B\u578B/README" }, { text: "\u23F0 \u5185\u7F6E\u6620\u5C04\u7C7B\u578B\u89E3\u6790", link: "/notes/0204. \u5185\u7F6E\u6620\u5C04\u7C7B\u578B\u89E3\u6790/README" }] }, { text: "24. \u7C7B\u578B\u5DE5\u5177", collapsed: true, items: [{ text: "\u23F0 Partial T", link: "/notes/0205. Partial T/README" }, { text: "\u23F0 Required T", link: "/notes/0206. Required T/README" }, { text: "\u23F0 Readonly T", link: "/notes/0207. Readonly T/README" }, { text: "\u23F0 Record T", link: "/notes/0208. Record T/README" }, { text: "\u23F0 Pick T K", link: "/notes/0209. Pick T K/README" }, { text: "\u23F0 Omit T K", link: "/notes/0210. Omit T K/README" }, { text: "\u23F0 Exclude T U", link: "/notes/0211. Exclude T U/README" }, { text: "\u23F0 Extract T U", link: "/notes/0212. Extract T U/README" }, { text: "\u23F0 NonNullable T", link: "/notes/0213. NonNullable T/README" }, { text: "\u23F0 ReturnType T", link: "/notes/0214. ReturnType T/README" }, { text: "\u23F0 Parameters T", link: "/notes/0215. Parameters T/README" }, { text: "\u23F0 ConstructorParameters T", link: "/notes/0216. ConstructorParameters T/README" }, { text: "\u23F0 InstanceType T", link: "/notes/0217. InstanceType T/README" }, { text: "\u23F0 ThisParameterType T", link: "/notes/0218. ThisParameterType T/README" }, { text: "\u23F0 OmitThisParameter T", link: "/notes/0219. OmitThisParameter T/README" }, { text: "\u23F0 Awaited T", link: "/notes/0220. Awaited T/README" }, { text: "\u23F0 \u81EA\u5B9A\u4E49\u5DE5\u5177\u7C7B\u578B", link: "/notes/0221. \u81EA\u5B9A\u4E49\u5DE5\u5177\u7C7B\u578B/README" }] }, { text: "25. \u6CE8\u91CA\u6307\u4EE4", collapsed: true, items: [{ text: "\u23F0 @ts-ignore", link: "/notes/0222. @ts-ignore/README" }, { text: "\u23F0 @ts-expect-error", link: "/notes/0223. @ts-expect-error/README" }, { text: "\u23F0 @ts-nocheck", link: "/notes/0224. @ts-nocheck/README" }, { text: "\u23F0 @ts-check", link: "/notes/0225. @ts-check/README" }, { text: "\u23F0 JSDoc \u7C7B\u578B\u6CE8\u91CA", link: "/notes/0226. JSDoc \u7C7B\u578B\u6CE8\u91CA/README" }, { text: "\u23F0 @type \u6807\u8BB0", link: "/notes/0227. @type \u6807\u8BB0/README" }, { text: "\u23F0 @param \u6807\u8BB0", link: "/notes/0228. @param \u6807\u8BB0/README" }, { text: "\u23F0 @returns \u6807\u8BB0", link: "/notes/0229. @returns \u6807\u8BB0/README" }, { text: "\u23F0 @template \u6807\u8BB0", link: "/notes/0230. @template \u6807\u8BB0/README" }, { text: "\u23F0 @typedef \u6807\u8BB0", link: "/notes/0231. @typedef \u6807\u8BB0/README" }] }, { text: "26. tsconfig.json \u6587\u4EF6", collapsed: true, items: [{ text: "\u23F0 tsconfig.json \u7684\u4F5C\u7528", link: "/notes/0232. tsconfig.json \u7684\u4F5C\u7528/README" }, { text: "\u23F0 \u7F16\u8BD1\u9009\u9879\u5206\u7C7B\u6982\u89C8", link: "/notes/0233. \u7F16\u8BD1\u9009\u9879\u5206\u7C7B\u6982\u89C8/README" }, { text: "\u23F0 target \u548C lib", link: "/notes/0234. target \u548C lib/README" }, { text: "\u23F0 module \u548C moduleResolution", link: "/notes/0235. module \u548C moduleResolution/README" }, { text: "\u23F0 strict \u6A21\u5F0F", link: "/notes/0236. strict \u6A21\u5F0F/README" }, { text: "\u23F0 strictNullChecks", link: "/notes/0237. strictNullChecks/README" }, { text: "\u23F0 strictFunctionTypes", link: "/notes/0238. strictFunctionTypes/README" }, { text: "\u23F0 noImplicitAny", link: "/notes/0239. noImplicitAny/README" }, { text: "\u23F0 noImplicitThis", link: "/notes/0240. noImplicitThis/README" }, { text: "\u23F0 alwaysStrict", link: "/notes/0241. alwaysStrict/README" }, { text: "\u23F0 outDir \u548C rootDir", link: "/notes/0242. outDir \u548C rootDir/README" }, { text: "\u23F0 include \u548C exclude", link: "/notes/0243. include \u548C exclude/README" }, { text: "\u23F0 files \u9009\u9879", link: "/notes/0244. files \u9009\u9879/README" }, { text: "\u23F0 extends \u7EE7\u627F\u914D\u7F6E", link: "/notes/0245. extends \u7EE7\u627F\u914D\u7F6E/README" }, { text: "\u23F0 references \u9879\u76EE\u5F15\u7528", link: "/notes/0246. references \u9879\u76EE\u5F15\u7528/README" }, { text: "\u23F0 incremental \u589E\u91CF\u7F16\u8BD1", link: "/notes/0247. incremental \u589E\u91CF\u7F16\u8BD1/README" }, { text: "\u23F0 \u5E38\u7528\u7F16\u8BD1\u914D\u7F6E\u7EC4\u5408", link: "/notes/0248. \u5E38\u7528\u7F16\u8BD1\u914D\u7F6E\u7EC4\u5408/README" }] }, { text: "27. tsc \u547D\u4EE4", collapsed: true, items: [{ text: "\u23F0 tsc \u547D\u4EE4\u7684\u57FA\u672C\u7528\u6CD5", link: "/notes/0257. tsc \u547D\u4EE4\u7684\u57FA\u672C\u7528\u6CD5/README" }, { text: "\u23F0 tsc \u5E38\u7528\u53C2\u6570", link: "/notes/0258. tsc \u5E38\u7528\u53C2\u6570/README" }, { text: "\u23F0 tsc --watch \u6A21\u5F0F", link: "/notes/0259. tsc --watch \u6A21\u5F0F/README" }, { text: "\u23F0 tsc --project \u6307\u5B9A\u914D\u7F6E\u6587\u4EF6", link: "/notes/0260. tsc --project \u6307\u5B9A\u914D\u7F6E\u6587\u4EF6/README" }, { text: "\u23F0 tsc --outDir \u548C --outFile", link: "/notes/0261. tsc --outDir \u548C --outFile/README" }, { text: "\u23F0 tsc --declaration \u751F\u6210\u58F0\u660E\u6587\u4EF6", link: "/notes/0262. tsc --declaration \u751F\u6210\u58F0\u660E\u6587\u4EF6/README" }, { text: "\u23F0 tsc --sourceMap \u751F\u6210\u6E90\u7801\u6620\u5C04", link: "/notes/0263. tsc --sourceMap \u751F\u6210\u6E90\u7801\u6620\u5C04/README" }, { text: "\u23F0 tsc --noEmit \u53EA\u68C0\u67E5\u4E0D\u8F93\u51FA", link: "/notes/0264. tsc --noEmit \u53EA\u68C0\u67E5\u4E0D\u8F93\u51FA/README" }, { text: "\u23F0 tsc --showConfig \u663E\u793A\u914D\u7F6E", link: "/notes/0265. tsc --showConfig \u663E\u793A\u914D\u7F6E/README" }, { text: "\u23F0 tsc --listFiles \u5217\u51FA\u7F16\u8BD1\u6587\u4EF6", link: "/notes/0266. tsc --listFiles \u5217\u51FA\u7F16\u8BD1\u6587\u4EF6/README" }, { text: "\u23F0 tsc --init \u521D\u59CB\u5316\u914D\u7F6E", link: "/notes/0267. tsc --init \u521D\u59CB\u5316\u914D\u7F6E/README" }] }, { text: "28. \u5B9E\u6218\u6280\u5DE7", collapsed: true, items: [{ text: "\u23F0 \u5E38\u89C1\u7C7B\u578B\u9519\u8BEF\u5904\u7406", link: "/notes/0268. \u5E38\u89C1\u7C7B\u578B\u9519\u8BEF\u5904\u7406/README" }, { text: "\u23F0 \u7C7B\u578B\u6536\u7A84\u6280\u5DE7", link: "/notes/0269. \u7C7B\u578B\u6536\u7A84\u6280\u5DE7/README" }, { text: "\u23F0 \u7C7B\u578B\u5B88\u536B\u7684\u4F7F\u7528", link: "/notes/0270. \u7C7B\u578B\u5B88\u536B\u7684\u4F7F\u7528/README" }, { text: "\u23F0 \u7C7B\u578B\u63A8\u65AD\u7684\u6700\u4F73\u5B9E\u8DF5", link: "/notes/0271. \u7C7B\u578B\u63A8\u65AD\u7684\u6700\u4F73\u5B9E\u8DF5/README" }, { text: "\u23F0 \u907F\u514D\u7C7B\u578B\u65AD\u8A00\u7684\u6EE5\u7528", link: "/notes/0272. \u907F\u514D\u7C7B\u578B\u65AD\u8A00\u7684\u6EE5\u7528/README" }, { text: "\u23F0 React \u4E2D\u7684 TypeScript", link: "/notes/0273. React \u4E2D\u7684 TypeScript/README" }, { text: "\u23F0 Vue \u4E2D\u7684 TypeScript", link: "/notes/0274. Vue \u4E2D\u7684 TypeScript/README" }, { text: "\u23F0 Node.js \u4E2D\u7684 TypeScript", link: "/notes/0275. Node.js \u4E2D\u7684 TypeScript/README" }, { text: "\u23F0 \u7B2C\u4E09\u65B9\u5E93\u7684\u7C7B\u578B\u5904\u7406", link: "/notes/0276. \u7B2C\u4E09\u65B9\u5E93\u7684\u7C7B\u578B\u5904\u7406/README" }] }, { text: "29. \u6DF1\u5165\u539F\u7406", collapsed: true, items: [{ text: "\u23F0 \u6DF1\u5165\u539F\u7406", link: "/notes/0045. \u6DF1\u5165\u539F\u7406/README" }, { text: "\u2705 Source Map \u7684\u57FA\u672C\u6982\u5FF5\u548C\u539F\u7406", link: "/notes/0043. Source Map \u7684\u57FA\u672C\u6982\u5FF5\u548C\u539F\u7406/README" }, { text: "\u23F0 TS \u7F16\u8BD1\u6D41\u7A0B", link: "/notes/0249. TS \u7F16\u8BD1\u6D41\u7A0B/README" }, { text: "\u23F0 AST \u62BD\u8C61\u8BED\u6CD5\u6811", link: "/notes/0250. AST \u62BD\u8C61\u8BED\u6CD5\u6811/README" }, { text: "\u23F0 \u7C7B\u578B\u68C0\u67E5\u539F\u7406", link: "/notes/0251. \u7C7B\u578B\u68C0\u67E5\u539F\u7406/README" }, { text: "\u23F0 \u7C7B\u578B\u64E6\u9664", link: "/notes/0252. \u7C7B\u578B\u64E6\u9664/README" }, { text: "\u23F0 \u58F0\u660E\u7A7A\u95F4\u4E0E\u53D8\u91CF\u7A7A\u95F4", link: "/notes/0253. \u58F0\u660E\u7A7A\u95F4\u4E0E\u53D8\u91CF\u7A7A\u95F4/README" }, { text: "\u23F0 \u7C7B\u578B\u7CFB\u7EDF\u7684\u5065\u5168\u6027", link: "/notes/0254. \u7C7B\u578B\u7CFB\u7EDF\u7684\u5065\u5168\u6027/README" }, { text: "\u23F0 \u7ED3\u6784\u7C7B\u578B\u7CFB\u7EDF\u7684\u5B9E\u73B0", link: "/notes/0255. \u7ED3\u6784\u7C7B\u578B\u7CFB\u7EDF\u7684\u5B9E\u73B0/README" }, { text: "\u23F0 \u7F16\u8BD1\u6027\u80FD\u4F18\u5316", link: "/notes/0256. \u7F16\u8BD1\u6027\u80FD\u4F18\u5316/README" }] }, { text: "30. \u8FDB\u9636\u8BDD\u9898", collapsed: true, items: [{ text: "\u23F0 \u9AD8\u7EA7\u7C7B\u578B\u6280\u5DE7", link: "/notes/0277. \u9AD8\u7EA7\u7C7B\u578B\u6280\u5DE7/README" }, { text: "\u23F0 \u7C7B\u578B\u4F53\u64CD", link: "/notes/0278. \u7C7B\u578B\u4F53\u64CD/README" }, { text: "\u23F0 \u7C7B\u578B\u5B89\u5168\u7684\u8BBE\u8BA1\u6A21\u5F0F", link: "/notes/0279. \u7C7B\u578B\u5B89\u5168\u7684\u8BBE\u8BA1\u6A21\u5F0F/README" }, { text: "\u23F0 TS \u4E0E\u51FD\u6570\u5F0F\u7F16\u7A0B", link: "/notes/0280. TS \u4E0E\u51FD\u6570\u5F0F\u7F16\u7A0B/README" }, { text: "\u23F0 TS \u6027\u80FD\u4F18\u5316", link: "/notes/0281. TS \u6027\u80FD\u4F18\u5316/README" }, { text: "\u23F0 \u5927\u578B\u9879\u76EE\u7684\u7C7B\u578B\u7EC4\u7EC7", link: "/notes/0282. \u5927\u578B\u9879\u76EE\u7684\u7C7B\u578B\u7EC4\u7EC7/README" }, { text: "\u23F0 monorepo \u4E2D\u7684 TypeScript", link: "/notes/0283. monorepo \u4E2D\u7684 TypeScript/README" }] }];

// .vitepress/plugins/hmr.js
import fs2 from "fs";
import path4 from "path";

// .vitepress/tnotes/constants.js
import path3 from "path";
import { fileURLToPath as fileURLToPath2 } from "url";
import { v4 as uuidv4 } from "file:///C:/tnotesjs/TNotes.typescript/node_modules/.pnpm/uuid@11.1.0/node_modules/uuid/dist/esm/index.js";

// .vitepress/tnotes/utils/add_number_to_title.js
function createAddNumberToTitle() {
  const titleNumbers = Array(7).fill(0);
  return function addNumberToTitle(title) {
    const match = title.match(
      /^(\#+)\s*((\d+(\.\d*)?(\.\d*)?(\.\d*)?(\.\d*)?(\.\d*)?)\.\s*)?(.*)/
      // !注意：windows 环境下，读到的 title 结尾会带有一个 /r，在正则匹配的时候，不要记上结尾 $
    );
    const plainTitle = match ? match[9].trim() : title.trim();
    const level = title.indexOf(" ");
    const baseLevel = 2;
    if (level === 1) return [title, plainTitle];
    for (let i = level + 1; i < titleNumbers.length; i++) titleNumbers[i] = 0;
    titleNumbers[level] += 1;
    const newNumber = titleNumbers.slice(baseLevel, level + 1).join(".");
    const headerSymbol = title.slice(0, level).trim();
    const newTitle = `${headerSymbol} ${newNumber}. ${plainTitle}`;
    return [newTitle, plainTitle];
  };
}

// .vitepress/tnotes/utils/gen_anchor.js
import GithubSlugger from "file:///C:/tnotesjs/TNotes.typescript/node_modules/.pnpm/github-slugger@2.0.0/node_modules/github-slugger/index.js";
var slugger = new GithubSlugger();
var generateAnchor = (label) => {
  slugger.reset();
  return slugger.slug(label);
};

// .vitepress/tnotes/utils/gen_toc.js
function generateToc(titles, baseLevel = 2) {
  const toc = titles.map((title) => {
    const level = title.indexOf(" ");
    const text = title.slice(level).trim();
    const anchor = generateAnchor(text);
    return " ".repeat((level - baseLevel) * 2) + `- [${text}](#${anchor})`;
  }).join(EOL);
  return `${EOL}${toc}${EOL}`;
}

// .vitepress/tnotes/utils/get_git_timestamp.js
import { exec } from "child_process";
import { promisify } from "util";

// .vitepress/tnotes/utils/get_changed_ids.js
import path from "path";
import { execSync } from "child_process";
function getChangedIds() {
  const changedFiles = execSync(
    `git diff --name-only HEAD -- "notes/[0-9][0-9][0-9][0-9]*/README.md"`
    // 根据当前仓库状态和最近一次提交之间的比较
  ).toString().split(/\r?\n/).filter(Boolean).map((fp) => fp.replace(/^"|"$/g, "")).map((fp) => fp.split("/").join(path.sep));
  const changedIds2 = changedFiles.map((fp) => {
    const parts = fp.split(path.sep);
    const dirName = parts.find((p, i) => parts[i - 1] === "notes");
    return dirName?.slice(0, 4);
  }).filter(Boolean);
  console.log("\u672C\u6B21\u66F4\u65B0\u7684\u7B14\u8BB0 ID \u96C6\u5408:", changedIds2);
  return new Set(changedIds2);
}

// .vitepress/tnotes/utils/get_git_timestamp.js
var execAsync = promisify(exec);
var changedIds = getChangedIds();

// .vitepress/tnotes/utils/get_tnotes_config.js
import fs from "fs";
import path2 from "path";
import { fileURLToPath } from "url";
var __vite_injected_original_import_meta_url = "file:///C:/tnotesjs/TNotes.typescript/.vitepress/tnotes/utils/get_tnotes_config.js";
var __dirname = path2.dirname(fileURLToPath(__vite_injected_original_import_meta_url));
var tnotes_config = null;
var tnotes_config_path = path2.normalize(
  path2.resolve(__dirname, "..", "..", "..", ".tnotes.json")
);
function getTnotesConfig() {
  if (tnotes_config) return tnotes_config;
  tnotes_config = JSON.parse(fs.readFileSync(tnotes_config_path));
  return tnotes_config;
}

// .vitepress/tnotes/constants.js
var __vite_injected_original_import_meta_url2 = "file:///C:/tnotesjs/TNotes.typescript/.vitepress/tnotes/constants.js";
var {
  author: author2,
  ignore_dirs: ignore_dirs2,
  repoName: repoName2,
  socialLinks: socialLinks2,
  menuItems: menuItems2,
  sidebar_isNotesIDVisible,
  sidebar_isCollapsed,
  port,
  rootSidebarDir,
  root_item
} = getTnotesConfig();
var BILIBILI_VIDEO_BASE_URL = "https://www.bilibili.com/video/";
var TNOTES_YUQUE_BASE_URL = "https://www.yuque.com/tdahuyou/tnotes.yuque/";
var __dirname2 = path3.dirname(fileURLToPath2(__vite_injected_original_import_meta_url2));
var TNOTES_BASE_DIR = path3.resolve(__dirname2, "..", "..", "..");
var EN_WORDS_DIR = path3.resolve(TNOTES_BASE_DIR, "TNotes.en-words");
var ROOT_DIR_PATH = path3.resolve(__dirname2, "..", "..");
var ROOT_README_PATH = path3.resolve(ROOT_DIR_PATH, "README.md");
var ROOT_CONFIG_PATH = path3.resolve(ROOT_DIR_PATH, ".tnotes.json");
var NOTES_DIR_PATH = path3.resolve(ROOT_DIR_PATH, "notes");
var VP_DIR_PATH = path3.resolve(ROOT_DIR_PATH, ".vitepress");
var PUBLIC_PATH = path3.resolve(ROOT_DIR_PATH, "public");
var GITHUB_DIR_PATH = path3.resolve(ROOT_DIR_PATH, ".github");
var GITHUB_DEPLOYYML_PATH = path3.resolve(
  GITHUB_DIR_PATH,
  "workflows",
  "deploy.yml"
);
var VP_TOC_PATH = path3.resolve(ROOT_DIR_PATH, "TOC.md");
var VP_SIDEBAR_PATH = path3.resolve(ROOT_DIR_PATH, "sidebar.json");
var ROOT_PKG_PATH = path3.resolve(ROOT_DIR_PATH, "package.json");
var VSCODE_SETTINGS_PATH = path3.resolve(
  ROOT_DIR_PATH,
  ".vscode",
  "settings.json"
);
var VSCODE_TASKS_PATH = path3.resolve(
  ROOT_DIR_PATH,
  ".vscode",
  "tasks.json"
);
var EOL = "\n";
var MERGED_README_FILENAME = "MERGED_README.md";
var MERGED_README_PATH = path3.resolve(
  ROOT_DIR_PATH,
  MERGED_README_FILENAME
);
var NOTES_TOC_START_TAG = "<!-- region:toc -->";
var NOTES_TOC_END_TAG = "<!-- endregion:toc -->";
var REPO_URL = `https://github.com/${author2}/${repoName2}/tree/main`;
var REPO_NOTES_URL = `https://github.com/${author2}/${repoName2}/tree/main/notes`;
var REPO_BLOB_URL_1 = `https://github.com/${author2}/${repoName2}/blob/main/notes`;
var GITHUB_PAGE_URL = `https://tnotesjs.github.io/${repoName2}`;
var GITHUB_PAGE_NOTES_URL = `https://tnotesjs.github.io/${repoName2}/notes`;

// .vitepress/plugins/hmr.js
async function TN_HMR_Plugin() {
  return {
    name: "tn-hmr-plugin",
    configureServer(server) {
      const HANDLE_DURATION = 3 * 1e3;
      let lastHandleTime = Date.now();
      let isHmrEnable = true;
      server.watcher.on("all", async (event, filePath) => {
        if (Date.now() - lastHandleTime < HANDLE_DURATION || // 如果最近两次更新的时间需要小于 UPDATE_TIMEOUT 阈值，直接 return
        !isHmrEnable) {
          return;
        }
        console.log("[hmr]", filePath);
        lastHandleTime = Date.now();
        isHmrEnable = false;
        try {
          const basename = path4.basename(filePath);
          const notesStats = await fs2.promises.lstat(filePath);
          const notesDirName = path4.basename(path4.dirname(filePath));
          if (basename === "README.md" && notesStats.isFile() && notesDirName.match(/^\d{4}.\s/) && !ignore_dirs2.includes(notesDirName)) {
            const startTime = Date.now();
            let lines = await fs2.promises.readFile(filePath, "utf-8");
            lines = lines.split(EOL);
            lines[0] = `# [${notesDirName}](${REPO_NOTES_URL}/${encodeURIComponent(
              notesDirName
            )})`;
            let startLineIdx = -1, endLineIdx = -1;
            lines.forEach((line, idx) => {
              if (line.startsWith(NOTES_TOC_START_TAG)) startLineIdx = idx;
              if (line.startsWith(NOTES_TOC_END_TAG)) endLineIdx = idx;
            });
            if (startLineIdx !== -1 && endLineIdx !== -1) {
              const notesID = notesDirName.slice(0, 4);
              const titles = [];
              const headers = ["## ", "### ", "#### ", "##### ", "###### "];
              const addNumberToTitle = createAddNumberToTitle();
              for (let i = 0; i < lines.length; i++) {
                const line = lines[i];
                const isHeader = headers.some(
                  (header) => line.startsWith(header)
                );
                if (isHeader) {
                  const [numberedTitle] = addNumberToTitle(line);
                  titles.push(numberedTitle);
                  lines[i] = numberedTitle;
                }
              }
              const toc = generateToc(titles, 2);
              let bilibiliTOCItems = [];
              let tnotesTOCItems = [];
              let yuqueTOCItems = [];
              const configPath = path4.resolve(
                path4.dirname(filePath),
                ".tnotes.json"
              );
              let notesConfig = await fs2.promises.readFile(configPath, "utf8");
              notesConfig = JSON.parse(notesConfig);
              if (notesConfig) {
                if (notesConfig.bilibili.length > 0) {
                  bilibiliTOCItems = notesConfig.bilibili.map(
                    (bvid, i) => `  - [bilibili.${repoName2}.${notesID}.${i + 1}](${BILIBILI_VIDEO_BASE_URL + bvid})`
                  );
                }
                if (notesConfig.tnotes.length > 0) {
                  tnotesTOCItems = notesConfig.tnotes.map(
                    ([tnotesName, notesID2, notesName], i) => `  - [TNotes.${tnotesName} - ${notesID2 + (notesName ? `. ${notesName}/README` : "")}](${`https://tnotesjs.github.io/TNotes.${tnotesName}/notes/` + notesID2 + (notesName ? `.%20${encodeURIComponent(notesName)}/README` : "")})`
                  );
                }
                if (notesConfig.yuque.length > 0) {
                  yuqueTOCItems = notesConfig.yuque.map(
                    (slug, i) => `  - [TNotes.yuque.${repoName2.replace(
                      "TNotes.",
                      ""
                    )}.${notesID}](${TNOTES_YUQUE_BASE_URL + slug})`
                  );
                }
              }
              const insertTocItems = [];
              if (bilibiliTOCItems.length > 0) {
                insertTocItems.push(
                  `- [\u{1F4FA} bilibili \u{1F449} TNotes \u5408\u96C6](https://space.bilibili.com/407241004)`,
                  ...bilibiliTOCItems
                );
              }
              if (tnotesTOCItems.length > 0) {
                insertTocItems.push(
                  `- [\u{1F4D2} TNotes](https://tnotesjs.github.io/TNotes/)`,
                  ...tnotesTOCItems
                );
              }
              if (yuqueTOCItems.length > 0) {
                insertTocItems.push(
                  `- [\u{1F4C2} TNotes.yuque](${TNOTES_YUQUE_BASE_URL})`,
                  ...yuqueTOCItems
                );
              }
              lines.splice(
                startLineIdx + 1,
                endLineIdx - startLineIdx - 1,
                "",
                ...insertTocItems,
                ...toc.replace(new RegExp(`^${EOL}`), "").split(EOL)
              );
            }
            await fs2.promises.writeFile(filePath, lines.join(EOL));
            console.log(`\u{1F680} ${Date.now() - startTime} ms`);
          }
        } catch (err) {
          if (event !== "unlinkDir" && !["ENOENT", "ENOTDIR"].includes(err.code)) {
            console.log("\u274C tn hmr error", err);
          }
        } finally {
          isHmrEnable = true;
        }
      });
    }
  };
}

// .vitepress/config.mts
import fs3 from "fs";
import path5 from "path";
var IGNORE_LIST = [
  "./README.md",
  "./MERGED_README.md",
  ...ignore_dirs.map((dir) => `**/${dir}/**`)
];
var github_page_url = "https://" + author.toLowerCase() + ".github.io/" + repoName + "/";
var config_default = defineConfig({
  appearance: "dark",
  base: "/" + repoName + "/",
  cleanUrls: true,
  description: repoName,
  head: head(),
  ignoreDeadLinks: true,
  lang: "zh-Hans",
  /*
   * 笔记的创建时间和最后更新时间直接写入 ./notes/xxx/.tnotes.json 配置文件中
   * created_at: ...,
   * updated_at: ...,
   *
   * 备注：
   * 直接使用内置的 lastUpdated 来计算，在笔记数量较多（比如 leetcode 3k+）的情况下，经常会在 build 的时候遇到 vitepress 的报错：[vitepress] spawn EBADF。
   * 经过排查是因为 vitepress 内部使用的 git-log 命令在处理大量文件时会失败（怀疑是命令行参数过长导致），所以只能放弃内置的 lastUpdated 功能，改为手动维护。
   * */
  lastUpdated: false,
  markdown: markdown(),
  router: {
    prefetchLinks: false
  },
  sitemap: {
    hostname: github_page_url,
    lastmodDateOnly: false
  },
  // https://vitepress.dev/reference/default-theme-config
  themeConfig: themeConfig(),
  title: repoName,
  srcExclude: IGNORE_LIST,
  vite: {
    server: {
      watch: {
        ignored: IGNORE_LIST
        // awaitWriteFinish: {
        //   stabilityThreshold: 5000, // 文件大小稳定 1000ms 后触发
        //   pollInterval: 1000, // 每 100ms 检查一次文件大小
        // },
        // usePolling: true, // 启用轮询机制（更稳定但稍耗资源） 解决 WSL/macOS 常见监听问题
      }
      // 避免内存溢出（大型文档库必备）
      // warmup: {
      //   clientFiles: ['./**/*.md'],
      // },
    },
    plugins: [TN_HMR_Plugin()]
  }
});
function head() {
  const head2 = [
    [
      "meta",
      {
        name: "keywords",
        content: keywords.join(", ")
      }
    ],
    ["meta", { name: "author", content: author }],
    ["link", { rel: "canonical", href: github_page_url }],
    ["link", { rel: "icon", href: github_page_url + "favicon.ico" }],
    ["link", { rel: "preconnect", href: "https://fonts.googleapis.com" }]
  ];
  return head2;
}
var simpleMermaidMarkdown = (md) => {
  const fence = md.renderer.rules.fence ? md.renderer.rules.fence.bind(md.renderer.rules) : () => "";
  md.renderer.rules.fence = (tokens, index, options, env, slf) => {
    const token = tokens[index];
    if (token.info.trim() === "mermaid") {
      try {
        const key = `mermaid-${Date.now()}-${Math.random().toString(36).substr(2, 9)}`;
        const content = token.content;
        return `<Mermaid id="${key}" graph="${encodeURIComponent(content)}" />`;
      } catch (err) {
        return `<pre>${err}</pre>`;
      }
    }
    if (token.info.trim() === "mmd") {
      tokens[index].info = "mermaid";
    }
    return fence(tokens, index, options, env, slf);
  };
};
function markdown() {
  const markdown2 = {
    lineNumbers: true,
    math: true,
    config(md) {
      md.core.ruler.before("normalize", "save-source", (state) => {
        state.env.source = state.src;
        return true;
      });
      simpleMermaidMarkdown(md);
      md.use(markdownItContainer, "markmap", {
        marker: "`",
        validate(params) {
          const p = (params || "").trim();
          return p.startsWith("markmap");
        },
        render() {
          return "";
        }
      });
      md.core.ruler.after("block", "tn_replace_markmap_container", (state) => {
        const src = state.env.source || "";
        const lines = src.split("\n");
        const tokens = state.tokens;
        for (let i = 0; i < tokens.length; i++) {
          const t = tokens[i];
          if (t.type === "container_markmap_open") {
            let j = i + 1;
            while (j < tokens.length && tokens[j].type !== "container_markmap_close")
              j++;
            if (j >= tokens.length) continue;
            const open = t;
            const startLine = open.map ? open.map[0] + 1 : null;
            const endLine = open.map ? open.map[1] - 1 : null;
            let params = {};
            if (open.map && typeof open.map[0] === "number") {
              const openLine = (lines[open.map[0]] || "").trim();
              let paramPart = "";
              const braceMatch = openLine.match(/\{([^}]*)\}/);
              if (braceMatch) {
                paramPart = braceMatch[1].trim();
              } else {
                const after = openLine.replace(/^`+\s*/, "");
                if (after.startsWith("markmap")) {
                  paramPart = after.slice("markmap".length).trim();
                }
              }
              if (paramPart) {
                const tokenArr = paramPart.match(/"[^"]*"|'[^']*'|\S+/g) || [];
                let startIdx = 0;
                if (tokenArr.length > 0 && /^\d+$/.test(tokenArr[0])) {
                  params.initialExpandLevel = Number(tokenArr[0]);
                  startIdx = 1;
                }
                for (let k = startIdx; k < tokenArr.length; k++) {
                  const pair = tokenArr[k];
                  if (!pair) continue;
                  const m = pair.match(/^([^=:\s]+)\s*(=|:)\s*(.+)$/);
                  if (m) {
                    const key = m[1];
                    let val = m[3];
                    if (/^".*"$/.test(val) && val.length >= 2 || /^'.*'$/.test(val) && val.length >= 2) {
                      val = val.slice(1, -1);
                    } else if (/^\d+$/.test(val)) {
                      val = String(Number(val));
                    }
                    params[key] = val;
                  }
                }
              }
            }
            let content = "";
            if (startLine !== null && endLine !== null) {
              for (let k = startLine; k <= endLine && k < lines.length; k++) {
                content += lines[k] + "\n";
              }
            } else {
              for (let k = i + 1; k < j; k++) {
                content += tokens[k].content || "";
              }
            }
            const firstNonEmptyLine = (content || "").split("\n").find((ln) => ln.trim() !== "") || "";
            const refMatch = firstNonEmptyLine.trim().match(/^<<<\s*(.+)$/);
            if (refMatch) {
              let refRaw = refMatch[1].trim().replace(/^['"]|['"]$/g, "");
              try {
                const env = state.env || {};
                const possibleRel = env.relativePath || env.path || env.filePath || env.file || "";
                let refFullPath = refRaw;
                if (!path5.isAbsolute(refRaw)) {
                  if (possibleRel) {
                    const currentDir = path5.dirname(possibleRel);
                    refFullPath = path5.resolve(
                      process.cwd(),
                      currentDir,
                      refRaw
                    );
                  } else {
                    refFullPath = path5.resolve(process.cwd(), refRaw);
                  }
                } else {
                  refFullPath = refRaw;
                }
                console.log("refFullPath:", refFullPath);
                const fileContent = fs3.readFileSync(refFullPath, "utf-8");
                content = fileContent;
              } catch (err) {
                content = `Failed to load referenced file: ${esc(
                  String(refRaw)
                )}

Error: ${esc(
                  String(err && err.message ? err.message : err)
                )}`;
              }
            }
            const encodedContent = encodeURIComponent(content.trim());
            let propsStr = `content="${encodedContent}"`;
            for (const [k, v] of Object.entries(params)) {
              if (typeof v === "number" || /^\d+$/.test(String(v))) {
                propsStr += ` :${k}="${v}"`;
              } else {
                const safe = String(v).replace(/"/g, "&quot;");
                propsStr += ` ${k}="${safe}"`;
              }
            }
            const html = `<MarkMap ${propsStr}></MarkMap>
`;
            let htmlToken;
            if (typeof state.Token === "function") {
              htmlToken = new state.Token("html_block", "", 0);
              htmlToken.content = html;
            } else {
              htmlToken = {
                type: "html_block",
                tag: "",
                attrs: null,
                map: null,
                nesting: 0,
                level: 0,
                children: null,
                content: html,
                block: true
              };
            }
            tokens.splice(i, j - i + 1, htmlToken);
          }
        }
        return true;
      });
      md.use(markdownItTaskLists);
      md.use(mila, {
        attrs: {
          target: "_self",
          rel: "noopener"
        }
      });
      function esc(s = "") {
        return s.replace(
          /[&<>"']/g,
          (ch) => ({
            "&": "&amp;",
            "<": "&lt;",
            ">": "&gt;",
            '"': "&quot;",
            "'": "&#39;"
          })[ch]
        );
      }
      let __tn_swiper_uid = 0;
      let __tn_rules_stack = [];
      md.core.ruler.before("block", "tn_swiper_reset_uid", () => {
        __tn_swiper_uid = 0;
        __tn_rules_stack = [];
        return true;
      });
      md.use(markdownItContainer, "swiper", {
        render: (tokens, idx) => {
          if (tokens[idx].nesting === 1) {
            __tn_rules_stack.push({
              image: md.renderer.rules.image,
              pOpen: md.renderer.rules.paragraph_open,
              pClose: md.renderer.rules.paragraph_close
            });
            md.renderer.rules.paragraph_open = () => "";
            md.renderer.rules.paragraph_close = () => "";
            md.renderer.rules.image = (tokens2, i) => {
              const token = tokens2[i];
              const src = token.attrGet("src") || "";
              const alt = token.content || "";
              const title = alt && alt.trim() ? alt : "img";
              return `<div class="swiper-slide" data-title="${esc(
                title
              )}"><img src="${esc(src)}" alt="${esc(alt)}"></div>`;
            };
            const id = `tn-swiper-${++__tn_swiper_uid}`;
            return `
<div class="tn-swiper" data-swiper-id="${id}">
  <div class="tn-swiper-tabs"></div>
  <div class="swiper-container">
    <div class="swiper-wrapper">
`;
          } else {
            const prev = __tn_rules_stack.pop() || {
              image: null,
              pOpen: null,
              pClose: null
            };
            md.renderer.rules.image = prev.image;
            md.renderer.rules.paragraph_open = prev.pOpen;
            md.renderer.rules.paragraph_close = prev.pClose;
            return `
    </div>
    <!-- \u4E0B\u4E00\u9875\u6309\u94AE -->
    <!-- <div class="swiper-button-next"></div> -->
    <!-- \u4E0A\u4E00\u9875\u6309\u94AE -->
    <!-- <div class="swiper-button-prev"></div> -->
    <!-- \u5206\u9875\u5BFC\u822A -->
    <!-- <div class="swiper-pagination"></div> -->
  </div>
</div>
`;
          }
        }
      });
    },
    anchor: {
      slugify: generateAnchor
    },
    image: {
      lazyLoading: true
    }
  };
  return markdown2;
}
function themeConfig() {
  const themeConfig2 = {
    docFooter: {
      prev: "\u4E0A\u4E00\u7BC7",
      next: "\u4E0B\u4E00\u7BC7"
    },
    externalLinkIcon: true,
    outline: {
      level: [2, 3],
      label: "\u76EE\u5F55"
    },
    nav: [
      {
        text: "\u{1F440} TOC",
        link: "/TOC"
      },
      {
        text: "Menus",
        items: menuItems
      }
    ],
    search: {
      // 使用本地搜索（不依赖远程服务器）
      provider: "local",
      options: {
        miniSearch: {
          /**
           * 控制如何对文档进行分词、字段提取等预处理
           * @type {Pick<import('minisearch').Options, 'extractField' | 'tokenize' | 'processTerm'>}
           */
          options: {
            // 自定义分词逻辑
            tokenize: (text, language) => {
              if (language === "zh") {
                return text.match(/[\u4e00-\u9fa5]+|\S+/g) || [];
              }
              return text.split(/\s+/);
            },
            // 将所有词转为小写，确保大小写不敏感匹配
            processTerm: (term) => term.toLowerCase()
          },
          /**
           * 控制搜索时的行为（如模糊匹配、权重）
           * @type {import('minisearch').SearchOptions}
           * @default
           * { fuzzy: 0.2, prefix: true, boost: { title: 4, text: 2, titles: 1 } }
           */
          searchOptions: {
            fuzzy: 0.2,
            // 模糊匹配阈值（0-1），允许拼写错误的阈值（数值越低越严格）
            prefix: true,
            // 是否启用前缀匹配（输入“jav”可匹配“javascript”）
            boost: {
              title: 10,
              // 文件名作为 h1 标题，权重最高（这个 title 指的是 _render 返回结果 md.renderer html 中的第一个 h1，使用 folderName 作为第一个 h1，权重最高。）
              headings: 5,
              // h2 - h6
              text: 3,
              // 正文内容索引
              code: 1
              // 代码块索引权重
            }
          }
        },
        /**
         * 控制哪些 Markdown 内容参与本地搜索引擎索引
         * @param {string} src 当前 Markdown 文件的原始内容（即 .md 文件中的文本）
         * @param {import('vitepress').MarkdownEnv} env 包含当前页面环境信息的对象，比如 frontmatter、路径等
         * @param {import('markdown-it-async')} md 一个 Markdown 渲染器实例，用来将 Markdown 转换为 HTML
         */
        async _render(src, env, md) {
          const filePath = env.relativePath;
          if (filePath.includes("TOC.md")) return "";
          const notesIndex = filePath.indexOf("notes/");
          let folderName = "";
          if (notesIndex !== -1) {
            const pathAfterNotes = filePath.slice(notesIndex + "notes/".length);
            folderName = pathAfterNotes.split("/")[0];
          }
          const titleField = `# ${folderName}
`;
          const html = md.render(titleField + "\n\n" + src, env);
          return html;
        }
      }
    },
    sidebar: [...sidebar_default],
    socialLinks
  };
  return themeConfig2;
}
export {
  config_default as default
};
//# sourceMappingURL=data:application/json;base64,
